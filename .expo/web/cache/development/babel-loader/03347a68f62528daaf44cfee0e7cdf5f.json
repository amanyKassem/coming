{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ahmedtaha/Documents/work/react/amany/Archive/src/components/Language.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Container, Content } from 'native-base';\nimport styles from \"../../assets/styles\";\nimport i18n from \"../../locale/i18n\";\nimport COLORS from \"../consts/colors\";\nimport { chooseLang } from \"../actions\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction Language(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState('en'),\n      _useState2 = _slicedToArray(_useState, 2),\n      lan = _useState2[0],\n      setLang = _useState2[1];\n\n  var language = useSelector(function (state) {\n    return state.lang;\n  });\n  console.log(\"language\", language.lang);\n  var dispatch = useDispatch();\n\n  function changeLang(lang) {\n    if (language !== lang) {\n      dispatch(chooseLang(lang));\n    }\n  }\n\n  return React.createElement(ImageBackground, {\n    source: require(\"../../assets/images/splash_bg.png\"),\n    resizeMode: 'cover',\n    style: styles.imageBackground,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [styles.heightFull, styles.centerContext],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: [styles.flexCenter, styles.heightFull, styles.Width_100],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/images/logo.png\"),\n    style: [styles.icon110, styles.marginBottom_20],\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 20\n    }\n  }), React.createElement(Text, {\n    style: [styles.textRegular, styles.text_black, styles.textSize_18, styles.marginBottom_25],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 20\n    }\n  }, i18n.t('chooseLang')), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return changeLang('ar');\n    },\n    style: [styles.langSelect],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/images/saudi-arabia.png\"),\n    style: {\n      height: 100,\n      width: 100\n    },\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }\n  }), React.createElement(View, {\n    style: [styles.directionRow],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 24\n    }\n  }, React.createElement(View, {\n    style: [styles.flexCenter, styles.Radius_50, styles.icon17, {\n      borderWidth: 1,\n      borderColor: lan === 'ar' ? COLORS.mstarda : COLORS.black,\n      padding: 5\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 28\n    }\n  }, lan === 'ar' ? React.createElement(View, {\n    style: [styles.icon10, styles.Radius_50, {\n      backgroundColor: COLORS.mstarda\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 48\n    }\n  }) : null), React.createElement(Text, {\n    style: [styles.textRegular, styles.text_black, styles.textSize_14, {\n      marginLeft: 15\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 28\n    }\n  }, \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0647\"))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return changeLang('en');\n    },\n    style: [styles.langSelect, styles.marginTop_35],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 20\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/images/english-language.png\"),\n    style: {\n      height: 100,\n      width: 100\n    },\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 24\n    }\n  }), React.createElement(View, {\n    style: [styles.directionRow],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }\n  }, React.createElement(View, {\n    style: [styles.flexCenter, styles.Radius_50, styles.icon17, {\n      borderWidth: 1,\n      borderColor: lan === 'en' ? COLORS.mstarda : COLORS.black,\n      padding: 5\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 28\n    }\n  }, lan === 'en' ? React.createElement(View, {\n    style: [styles.icon10, styles.Radius_50, {\n      backgroundColor: COLORS.mstarda\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 48\n    }\n  }) : null), React.createElement(Text, {\n    style: [styles.textRegular, styles.text_black, styles.textSize_14, {\n      marginLeft: 15\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 28\n    }\n  }, \"English\"))))));\n}\n\nexport default Language;","map":{"version":3,"sources":["/Users/ahmedtaha/Documents/work/react/amany/Archive/src/components/Language.js"],"names":["React","useState","useEffect","Container","Content","styles","i18n","COLORS","chooseLang","useSelector","useDispatch","Language","navigation","lan","setLang","language","state","lang","console","log","dispatch","changeLang","require","imageBackground","heightFull","centerContext","flexCenter","Width_100","icon110","marginBottom_20","textRegular","text_black","textSize_18","marginBottom_25","t","langSelect","height","width","directionRow","Radius_50","icon17","borderWidth","borderColor","mstarda","black","padding","icon10","backgroundColor","textSize_14","marginLeft","marginTop_35"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, Text, Image, TouchableOpacity, ImageBackground , ScrollView } from 'react-native'\nimport {Container, Content} from 'native-base';\nimport styles from '../../assets/styles'\nimport i18n from \"../../locale/i18n\";\nimport COLORS from \"../consts/colors\";\nimport { chooseLang } from '../actions';\nimport {useSelector, useDispatch} from 'react-redux';\n\nfunction Language({ navigation }) {\n\n\n    const [lan, setLang] = useState('en')\n\n    const language = useSelector(state => state.lang);\n    console.log(\"language\" , language.lang)\n\n    const dispatch = useDispatch()\n\n    function changeLang(lang){\n        if(language !== lang){\n            dispatch(chooseLang(lang));\n        }\n    }\n\n\n    return (\n        <ImageBackground source={require('../../assets/images/splash_bg.png')} resizeMode={'cover'} style={styles.imageBackground}>\n           <View style={[ styles.heightFull , styles.centerContext ]}>\n               <ScrollView contentContainerStyle={[styles.flexCenter , styles.heightFull , styles.Width_100]} >\n                   <Image source={require('../../assets/images/logo.png')} style={[styles.icon110 , styles.marginBottom_20]} resizeMode='contain' />\n                   <Text style={[styles.textRegular , styles.text_black , styles.textSize_18, styles.marginBottom_25]}>{ i18n.t('chooseLang') }</Text>\n\n                   <TouchableOpacity onPress={() => changeLang('ar') } style={[styles.langSelect]}>\n                       <Image source={require('../../assets/images/saudi-arabia.png')} style={{ height: 100, width: 100 }} resizeMode='contain' />\n                       <View style={[styles.directionRow]}>\n                           <View style={[styles.flexCenter,  styles.Radius_50 ,styles.icon17, {borderWidth:1 , borderColor:lan === 'ar' ? COLORS.mstarda : COLORS.black , padding:5}]}>\n                               {lan === 'ar' ? <View style={[styles.icon10 , styles.Radius_50 ,  {backgroundColor:COLORS.mstarda}]}/> :  null}\n                           </View>\n                           <Text style={[styles.textRegular , styles.text_black , styles.textSize_14 , {marginLeft:15}]}>العربيه</Text>\n                       </View>\n                   </TouchableOpacity>\n\n                   <TouchableOpacity onPress={() => changeLang('en') } style={[styles.langSelect , styles.marginTop_35]}>\n                       <Image source={require('../../assets/images/english-language.png')} style={{ height: 100, width: 100 }} resizeMode='contain' />\n                       <View style={[styles.directionRow]}>\n                           <View style={[styles.flexCenter,  styles.Radius_50 ,styles.icon17, {borderWidth:1 , borderColor:lan === 'en' ? COLORS.mstarda : COLORS.black , padding:5}]}>\n                               {lan === 'en' ? <View style={[styles.icon10 , styles.Radius_50 ,  {backgroundColor:COLORS.mstarda}]}/> :  null}\n                           </View>\n                           <Text style={[styles.textRegular , styles.text_black , styles.textSize_14 , {marginLeft:15}]}>English</Text>\n                       </View>\n                   </TouchableOpacity>\n               </ScrollView>\n           </View>\n        </ImageBackground>\n    )\n}\n\nexport default Language"]},"metadata":{},"sourceType":"module"}