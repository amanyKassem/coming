{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ahmedtaha/Documents/work/react/amany/Archive/src/components/Favourite.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Container, Content, Icon, Input } from 'native-base';\nimport styles from \"../../assets/styles\";\nimport i18n from \"../../locale/i18n\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFavourites, setFavourite } from \"../actions\";\nimport Header from \"../common/Header\";\nimport COLORS from \"../consts/colors\";\nimport FavItem from \"./FavItem\";\nimport { useIsFocused } from \"@react-navigation/native\";\nvar height = Dimensions.get('window').height;\nvar isIOS = Platform.OS === 'ios';\n\nfunction Favourite(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var lang = useSelector(function (state) {\n    return state.lang.lang;\n  });\n  var token = useSelector(function (state) {\n    return state.auth.user ? state.auth.user.data.token : null;\n  });\n  var favourites = useSelector(function (state) {\n    return state.favourites.favourites;\n  });\n  var favouritesLoader = useSelector(function (state) {\n    return state.favourites.loader;\n  });\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      screenLoader = _useState2[0],\n      setScreenLoader = _useState2[1];\n\n  var dispatch = useDispatch();\n  var isFocused = useIsFocused();\n\n  function fetchData() {\n    setScreenLoader(true);\n    dispatch(getFavourites(lang, token)).then(function () {\n      return setScreenLoader(false);\n    });\n  }\n\n  useEffect(function () {\n    if (isFocused) {\n      fetchData();\n    }\n  }, [isFocused]);\n\n  function renderLoader() {\n    if (screenLoader) {\n      return React.createElement(View, {\n        style: [styles.loading, styles.flexCenter, {\n          height: '100%'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: COLORS.mstarda,\n        style: {\n          alignSelf: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  function renderNoData() {\n    if (favourites && favourites.length <= 0) {\n      return React.createElement(View, {\n        style: [styles.directionColumnCenter, styles.Width_100, styles.heightFull],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/images/note.png\"),\n        resizeMode: 'contain',\n        style: {\n          alignSelf: 'center',\n          width: 200,\n          height: 200\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return null;\n  }\n\n  function Item(_ref2) {\n    var name = _ref2.name,\n        image = _ref2.image,\n        location = _ref2.location,\n        id = _ref2.id,\n        index = _ref2.index,\n        isFav = _ref2.isFav;\n    return React.createElement(FavItem, {\n      data: {\n        name: name,\n        image: image,\n        location: location,\n        id: id,\n        index: index\n      },\n      isFav: isFav,\n      onToggleFavorite: function onToggleFavorite() {\n        return _onToggleFavorite(id);\n      },\n      navigation: navigation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    });\n  }\n\n  function _onToggleFavorite(id) {\n    dispatch(setFavourite(lang, id, token)).then(function () {\n      return dispatch(getFavourites(lang, token));\n    });\n  }\n\n  return React.createElement(Container, {\n    style: [styles.bg_gray],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, renderLoader(), React.createElement(Content, {\n    contentContainerStyle: [styles.bgFullWidth, styles.bg_gray],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(Header, {\n    navigation: navigation,\n    title: i18n.t('favourite'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: [styles.bgFullWidth, styles.bg_White, styles.Width_100, styles.paddingHorizontal_20, {\n      overflow: 'hidden'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: [styles.marginTop_20, styles.marginBottom_60],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, favourites && favourites.length > 0 ? React.createElement(FlatList, {\n    data: favourites,\n    horizontal: false,\n    showsVerticalScrollIndicator: false,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item,\n          index = _ref3.index;\n      return React.createElement(Item, {\n        id: item.id,\n        name: item.name,\n        image: item.avatar,\n        location: item.address,\n        isFav: item.is_favourite,\n        index: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 70\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }) : renderNoData()))));\n}\n\nexport default Favourite;","map":{"version":3,"sources":["/Users/ahmedtaha/Documents/work/react/amany/Archive/src/components/Favourite.js"],"names":["React","useEffect","useRef","useState","Container","Content","Icon","Input","styles","i18n","useDispatch","useSelector","getFavourites","setFavourite","Header","COLORS","FavItem","useIsFocused","height","Dimensions","get","isIOS","Platform","OS","Favourite","navigation","route","lang","state","token","auth","user","data","favourites","favouritesLoader","loader","screenLoader","setScreenLoader","dispatch","isFocused","fetchData","then","renderLoader","loading","flexCenter","mstarda","alignSelf","renderNoData","length","directionColumnCenter","Width_100","heightFull","require","width","Item","name","image","location","id","index","isFav","onToggleFavorite","bg_gray","bgFullWidth","t","bg_White","paddingHorizontal_20","overflow","marginTop_20","marginBottom_60","item","avatar","address","is_favourite"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport {\n    View,\n    Text,\n    Image,\n    TouchableOpacity,\n    Dimensions,\n    FlatList,\n    I18nManager,\n    ScrollView,\n    ActivityIndicator\n} from \"react-native\";\nimport {Container, Content, Icon, Input} from 'native-base'\nimport styles from '../../assets/styles'\nimport i18n from \"../../locale/i18n\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getFavourites , setFavourite} from '../actions';\nimport Header from '../common/Header';\nimport COLORS from \"../consts/colors\";\nimport FavItem from \"./FavItem\";\nimport {useIsFocused} from \"@react-navigation/native\";\n\nconst height = Dimensions.get('window').height;\nconst isIOS = Platform.OS === 'ios';\n\nfunction Favourite({navigation,route}) {\n\n    const lang = useSelector(state => state.lang.lang);\n    const token = useSelector(state => state.auth.user ? state.auth.user.data.token : null);\n    const favourites = useSelector(state => state.favourites.favourites);\n    const favouritesLoader = useSelector(state => state.favourites.loader);\n    const [screenLoader , setScreenLoader ] = useState(false);\n\n    const dispatch = useDispatch();\n    const isFocused = useIsFocused();\n\n    function fetchData(){\n        setScreenLoader(true)\n        dispatch(getFavourites(lang, token)).then(() => setScreenLoader(false))\n    }\n\n\n\n    useEffect(() => {\n        if (isFocused) {\n            fetchData();\n        }\n    }, [isFocused])\n\n    function renderLoader(){\n        if (screenLoader){\n            return(\n                <View style={[styles.loading, styles.flexCenter, {height:'100%'}]}>\n                    <ActivityIndicator size=\"large\" color={COLORS.mstarda} style={{ alignSelf: 'center' }} />\n                </View>\n            );\n        }\n    }\n\n    function renderNoData() {\n        if (favourites && (favourites).length <= 0) {\n            return (\n                <View style={[styles.directionColumnCenter , styles.Width_100, styles.heightFull]}>\n                    <Image source={require('../../assets/images/note.png')} resizeMode={'contain'}\n                           style={{alignSelf: 'center', width: 200, height: 200}}/>\n                </View>\n            );\n        }\n\n        return null\n    }\n\n\n    function Item({ name , image , location , id , index , isFav }) {\n        return (\n            <FavItem data={{name , image , location , id , index}} isFav={isFav}\n                   onToggleFavorite={() => onToggleFavorite(id)}\n                   navigation={navigation}/>\n        );\n    }\n\n    function onToggleFavorite (id){\n        dispatch(setFavourite(lang , id, token)).then(() => dispatch(getFavourites(lang, token)))\n    }\n\n\n    return (\n        <Container style={[styles.bg_gray]}>\n            {renderLoader()}\n            <Content contentContainerStyle={[styles.bgFullWidth , styles.bg_gray]}>\n\n                <Header navigation={navigation} title={ i18n.t('favourite') } />\n\n                <View style={[styles.bgFullWidth ,styles.bg_White, styles.Width_100,styles.paddingHorizontal_20, {overflow:'hidden'}]}>\n\n                    <View style={[styles.marginTop_20 , styles.marginBottom_60]}>\n\n                        {\n                            favourites && (favourites).length > 0?\n                                <FlatList\n                                    data={favourites}\n                                    horizontal={false}\n                                    showsVerticalScrollIndicator={false}\n                                    renderItem={({ item , index}) => <Item\n                                        id={item.id}\n                                        name={item.name}\n                                        image={item.avatar}\n                                        location={item.address}\n                                        isFav={item.is_favourite}\n                                        index={index}\n                                    />}\n                                    keyExtractor={item => item.id}\n                                />\n                                :\n                                renderNoData()\n                        }\n\n\n                    </View>\n\n                </View>\n\n\n            </Content>\n        </Container>\n    );\n}\n\nexport default Favourite;\n\n\n"]},"metadata":{},"sourceType":"module"}