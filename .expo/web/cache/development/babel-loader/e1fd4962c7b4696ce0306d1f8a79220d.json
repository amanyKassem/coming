{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport CONST from \"../consts\";\nimport { Toast } from \"native-base\";\nexport var userRate = function userRate(lang, rate, comment, quality, clean, dealing, speed, rated_id, token) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios({\n              url: CONST.url + 'rateComment',\n              method: 'POST',\n              params: {\n                lang: lang\n              },\n              data: {\n                rate: rate,\n                comment: comment,\n                quality: quality,\n                clean: clean,\n                dealing: dealing,\n                speed: speed,\n                rated_id: rated_id\n              },\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }).then(function (response) {\n              Toast.show({\n                text: response.data.message,\n                type: response.data.success ? \"success\" : \"danger\",\n                duration: 3000,\n                textStyle: {\n                  color: \"white\",\n                  fontFamily: 'flatRegular',\n                  textAlign: 'center'\n                }\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/Users/ahmedtaha/Documents/work/react/amany/Archive/src/actions/RateAction.js"],"names":["axios","CONST","Toast","userRate","lang","rate","comment","quality","clean","dealing","speed","rated_id","token","dispatch","url","method","params","data","headers","Authorization","then","response","show","text","message","type","success","duration","textStyle","color","fontFamily","textAlign"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP;AACA,SAAQC,KAAR,QAAoB,aAApB;AAGA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAQC,IAAR,EAAeC,OAAf,EAAyBC,OAAzB,EAAmCC,KAAnC,EAA2CC,OAA3C,EAAqDC,KAArD,EAA6DC,QAA7D,EAAwEC,KAAxE,EAAkF;AACtG,SAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGb,KAAK,CAAC;AACRc,cAAAA,GAAG,EAAWb,KAAK,CAACa,GAAN,GAAY,aADlB;AAERC,cAAAA,MAAM,EAAQ,MAFN;AAGRC,cAAAA,MAAM,EAAQ;AAAEZ,gBAAAA,IAAI,EAAJA;AAAF,eAHN;AAIRa,cAAAA,IAAI,EAAU;AAAEZ,gBAAAA,IAAI,EAAJA,IAAF;AAASC,gBAAAA,OAAO,EAAPA,OAAT;AAAmBC,gBAAAA,OAAO,EAAPA,OAAnB;AAA6BC,gBAAAA,KAAK,EAALA,KAA7B;AAAqCC,gBAAAA,OAAO,EAAPA,OAArC;AAA+CC,gBAAAA,KAAK,EAALA,KAA/C;AAAuDC,gBAAAA,QAAQ,EAARA;AAAvD,eAJN;AAKRO,cAAAA,OAAO,EAAO;AAACC,gBAAAA,aAAa,EAAE,YAAYP;AAA5B;AALN,aAAD,CAAL,CAMHQ,IANG,CAME,UAAAC,QAAQ,EAAI;AAChBnB,cAAAA,KAAK,CAACoB,IAAN,CAAW;AACPC,gBAAAA,IAAI,EAAUF,QAAQ,CAACJ,IAAT,CAAcO,OADrB;AAEPC,gBAAAA,IAAI,EAAUJ,QAAQ,CAACJ,IAAT,CAAcS,OAAd,GAAwB,SAAxB,GAAoC,QAF3C;AAGPC,gBAAAA,QAAQ,EAAM,IAHP;AAIPC,gBAAAA,SAAS,EAAK;AACVC,kBAAAA,KAAK,EAAS,OADJ;AAEVC,kBAAAA,UAAU,EAAI,aAFJ;AAGVC,kBAAAA,SAAS,EAAK;AAHJ;AAJP,eAAX;AAUH,aAjBK,CADH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAqBH,CAtBM","sourcesContent":["import axios from \"axios\";\nimport CONST from \"../consts\";\nimport {Toast} from \"native-base\";\n\n\nexport const userRate = (lang , rate , comment , quality , clean , dealing , speed , rated_id , token) => {\n    return async (dispatch) => {\n        await axios({\n            url         : CONST.url + 'rateComment',\n            method      : 'POST',\n            params      : { lang },\n            data        : { rate , comment , quality , clean , dealing , speed , rated_id },\n            headers     : {Authorization: 'Bearer ' + token}\n        }).then(response => {\n            Toast.show({\n                text        : response.data.message,\n                type        : response.data.success ? \"success\" : \"danger\",\n                duration    : 3000,\n                textStyle   : {\n                    color       : \"white\",\n                    fontFamily  : 'flatRegular',\n                    textAlign   : 'center'\n                }\n            });\n        });\n\n    }\n};"]},"metadata":{},"sourceType":"module"}