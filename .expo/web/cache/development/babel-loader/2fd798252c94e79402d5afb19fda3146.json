{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedtaha/Documents/work/react/amany/Archive/src/components/Intro.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Container, Content, Form, Icon, Input, Item, Label, Toast } from 'native-base';\nimport styles from \"../../assets/styles\";\nimport i18n from \"../../locale/i18n\";\nimport COLORS from \"../consts/colors\";\nimport SwiperFlatList from 'react-native-swiper-flatlist';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getIntro } from \"../actions\";\nvar isIOS = Platform.OS === 'ios';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar IS_IPHONE_X = (height === 812 || height === 896) && Platform.OS === 'ios';\n\nfunction Intro(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var lang = useSelector(function (state) {\n    return state.lang.lang;\n  });\n  var token = useSelector(function (state) {\n    return state.auth.user ? state.auth.user.data.token : null;\n  });\n  var intro = useSelector(function (state) {\n    return state.intro.intro;\n  });\n  var loader = useSelector(function (state) {\n    return state.intro.loader;\n  });\n  var dispatch = useDispatch();\n\n  function fetchData() {\n    dispatch(getIntro(lang, token));\n  }\n\n  useEffect(function () {\n    fetchData();\n    var unsubscribe = navigation.addListener('focus', function () {\n      fetchData();\n    });\n    return unsubscribe;\n  }, [navigation, loader]);\n\n  function renderLoader() {\n    if (loader === false) {\n      return React.createElement(View, {\n        style: [styles.loading, styles.flexCenter, {\n          height: '100%'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: COLORS.mstarda,\n        style: {\n          alignSelf: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, renderLoader(), React.createElement(Content, {\n    contentContainerStyle: [styles.bgFullWidth],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: [styles.bgFullWidth, styles.Width_100],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, React.createElement(SwiperFlatList, {\n    index: 0,\n    showPagination: true,\n    paginationActiveColor: COLORS.mstarda,\n    paginationStyle: [styles.marginBottom_65],\n    paginationStyleItem: {\n      width: 10,\n      height: 10,\n      marginHorizontal: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, intro.map(function (intr, i) {\n    return React.createElement(View, {\n      style: [styles.heightFull, {\n        width: width\n      }],\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 37\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: intr.image\n      },\n      style: [{\n        width: width,\n        height: '100%'\n      }],\n      resizeMode: 'cover',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 41\n      }\n    }), React.createElement(View, {\n      style: [styles.wrapText, IS_IPHONE_X ? styles.marginTop_120 : null],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 41\n      }\n    }, React.createElement(Text, {\n      style: [styles.text_black, styles.textBold, styles.textSize_18, styles.textCenter],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 45\n      }\n    }, intr.title), React.createElement(Text, {\n      numberOfLines: 4,\n      style: [styles.text_gray, styles.textRegular, styles.textSize_14, styles.marginTop_10, styles.textCenter, {\n        lineHeight: 24\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 45\n      }\n    }, \" \", intr.details, \" \")), intro.length == i + 1 ? React.createElement(TouchableOpacity, {\n      style: styles.introButton,\n      onPress: function onPress() {\n        return navigation.navigate('login');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 49\n      }\n    }, React.createElement(Text, {\n      style: [styles.text_White, styles.textBold, styles.textSize_18],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 53\n      }\n    }, i18n.t('start'))) : null);\n  })))));\n}\n\nexport default Intro;","map":{"version":3,"sources":["/Users/ahmedtaha/Documents/work/react/amany/Archive/src/components/Intro.js"],"names":["React","useState","useEffect","Container","Content","Form","Icon","Input","Item","Label","Toast","styles","i18n","COLORS","SwiperFlatList","useSelector","useDispatch","getIntro","isIOS","Platform","OS","Dimensions","get","width","height","IS_IPHONE_X","Intro","navigation","lang","state","token","auth","user","data","intro","loader","dispatch","fetchData","unsubscribe","addListener","renderLoader","loading","flexCenter","mstarda","alignSelf","bgFullWidth","Width_100","marginBottom_65","marginHorizontal","map","intr","i","heightFull","uri","image","wrapText","marginTop_120","text_black","textBold","textSize_18","textCenter","title","text_gray","textRegular","textSize_14","marginTop_10","lineHeight","details","length","introButton","navigate","text_White","t"],"mappings":"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","sourcesContent":["import React, { useState , useEffect } from \"react\";\nimport {\n    View,\n    Text,\n    Image,\n    TouchableOpacity,\n    StyleSheet,\n    Dimensions,\n    ActivityIndicator,\n    Platform,\n    ImageBackground\n} from \"react-native\";\nimport {Container, Content, Form, Icon, Input, Item, Label, Toast} from 'native-base'\nimport styles from '../../assets/styles'\nimport i18n from \"../../locale/i18n\";\nimport COLORS from \"../consts/colors\";\nimport SwiperFlatList from 'react-native-swiper-flatlist';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {getIntro} from '../actions';\n\n\nconst isIOS = Platform.OS === 'ios';\nconst { width , height } = Dimensions.get('window');\nconst IS_IPHONE_X \t= (height === 812 || height === 896) && Platform.OS === 'ios';\n\nfunction Intro({navigation}) {\n\n    const lang = useSelector(state => state.lang.lang);\n    const token = useSelector(state => state.auth.user ? state.auth.user.data.token : null);\n    const intro = useSelector(state => state.intro.intro)\n    const loader = useSelector(state => state.intro.loader)\n\n    const dispatch = useDispatch();\n\n    function fetchData(){\n        dispatch(getIntro(lang , token))\n    }\n\n\n    useEffect(() => {\n        fetchData();\n        const unsubscribe = navigation.addListener('focus', () => {\n            fetchData();\n        });\n\n        return unsubscribe;\n    }, [navigation , loader]);\n\n    function renderLoader(){\n        if (loader === false){\n            return(\n                <View style={[styles.loading, styles.flexCenter, {height:'100%'}]}>\n                    <ActivityIndicator size=\"large\" color={COLORS.mstarda} style={{ alignSelf: 'center' }} />\n                </View>\n            );\n        }\n    }\n\n\n\n    return (\n        <Container >\n            {renderLoader()}\n            {/*<ImageBackground source={require('../../assets/images/splash_bg.png')} resizeMode={'cover'} style={styles.imageBackground}>*/}\n                <Content contentContainerStyle={[styles.bgFullWidth]}>\n                    <View style={[styles.bgFullWidth, styles.Width_100]}>\n                        <SwiperFlatList\n                            index={0}\n                            showPagination\n                            paginationActiveColor={COLORS.mstarda}\n                            paginationStyle={[styles.marginBottom_65]}\n                            paginationStyleItem={{ width: 10, height: 10 ,marginHorizontal:5}}\n                        >\n\n                            {\n                                intro.map((intr, i) => (\n                                    <View style={[styles.heightFull , {width}]} key={i}>\n                                        <Image source={{uri:intr.image}} style={[{width , height:'100%'}]} resizeMode={'cover'} />\n                                        <View style={[styles.wrapText , IS_IPHONE_X ? styles.marginTop_120 : null]}>\n                                            <Text style={[styles.text_black , styles.textBold , styles.textSize_18 , styles.textCenter]}>{intr.title}</Text>\n                                            <Text numberOfLines={4} style={[styles.text_gray , styles.textRegular , styles.textSize_14 , styles.marginTop_10 , styles.textCenter , {lineHeight:24}]}> {intr.details} </Text>\n                                        </View>\n                                        {\n                                            intro.length == i + 1 ?\n                                                <TouchableOpacity style={styles.introButton} onPress={() => navigation.navigate('login')}>\n                                                    <Text style={[styles.text_White , styles.textBold , styles.textSize_18]}>\n                                                        {i18n.t('start')}\n                                                    </Text>\n                                                </TouchableOpacity> : null\n                                        }\n                                    </View>\n                                ))\n                            }\n\n\n                        </SwiperFlatList>\n\n                    </View>\n                </Content>\n            {/*</ImageBackground>*/}\n        </Container>\n    );\n}\n\n\nexport default Intro;\n\n\n"]},"metadata":{},"sourceType":"module"}