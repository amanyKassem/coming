{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ahmedtaha/Documents/work/react/amany/Archive/src/common/Banks.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { Container, Content, Icon, Input } from 'native-base';\nimport styles from \"../../assets/styles\";\nimport i18n from \"../../locale/i18n\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getBanks } from \"../actions\";\nimport Header from \"./Header\";\nimport COLORS from \"../consts/colors\";\nvar height = Dimensions.get('window').height;\nvar isIOS = Platform.OS === 'ios';\n\nfunction Banks(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var lang = useSelector(function (state) {\n    return state.lang.lang;\n  });\n  var token = useSelector(function (state) {\n    return state.auth.user ? state.auth.user.data.token : null;\n  });\n  var banks = useSelector(function (state) {\n    return state.banks.banks;\n  });\n  var banksLoader = useSelector(function (state) {\n    return state.banks.loader;\n  });\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      screenLoader = _useState2[0],\n      setScreenLoader = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  function fetchData() {\n    setScreenLoader(true);\n    dispatch(getBanks(lang));\n  }\n\n  useEffect(function () {\n    fetchData();\n    var unsubscribe = navigation.addListener('focus', function () {\n      fetchData();\n    });\n    return unsubscribe;\n  }, [navigation, banksLoader]);\n  useEffect(function () {\n    setScreenLoader(false);\n  }, [banks]);\n\n  function renderLoader() {\n    if (screenLoader) {\n      return React.createElement(View, {\n        style: [styles.loading, styles.flexCenter, {\n          height: '100%'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: COLORS.mstarda,\n        style: {\n          alignSelf: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  function renderNoData() {\n    if (banks && banks.length <= 0) {\n      return React.createElement(View, {\n        style: [styles.directionColumnCenter, styles.Width_100, styles.heightFull],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/images/note.png\"),\n        resizeMode: 'contain',\n        style: {\n          alignSelf: 'center',\n          width: 200,\n          height: 200\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return null;\n  }\n\n  return React.createElement(Container, {\n    style: [styles.bg_gray],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, renderLoader(), React.createElement(Content, {\n    contentContainerStyle: [styles.bgFullWidth, styles.bg_gray],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, React.createElement(Header, {\n    navigation: navigation,\n    title: i18n.t('banks'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: [styles.bgFullWidth, styles.bg_White, styles.Width_100, styles.paddingHorizontal_20, {\n      overflow: 'hidden',\n      paddingBottom: 20\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, banks && banks.length > 0 ? banks.map(function (bank, i) {\n    return React.createElement(TouchableOpacity, {\n      key: i,\n      onPress: function onPress() {\n        return navigation.navigate('bankTransfer', {\n          bank: bank\n        });\n      },\n      style: [styles.bg_gray, styles.paddingHorizontal_20, styles.paddingVertical_15, styles.Width_100, styles.marginTop_15, styles.Radius_10],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 37\n      }\n    }, React.createElement(Text, {\n      style: [styles.textBold, styles.text_White, styles.textSize_13, styles.alignStart],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 41\n      }\n    }, i18n.t('accName'), \" : \", bank.account_name), React.createElement(Text, {\n      style: [styles.textBold, styles.text_White, styles.textSize_13, styles.marginTop_10, styles.alignStart],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 41\n      }\n    }, i18n.t('bankName'), \" : \", bank.bank_name), React.createElement(Text, {\n      style: [styles.textBold, styles.text_White, styles.textSize_13, styles.marginTop_10, styles.alignStart],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 41\n      }\n    }, i18n.t('accNum'), \" : \", bank.account_number), React.createElement(Text, {\n      style: [styles.textBold, styles.text_White, styles.textSize_13, styles.marginTop_10, styles.alignStart],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 41\n      }\n    }, bank.iban_number, \" : \", i18n.t('iabn')));\n  }) : renderNoData())));\n}\n\nexport default Banks;","map":{"version":3,"sources":["/Users/ahmedtaha/Documents/work/react/amany/Archive/src/common/Banks.js"],"names":["React","useEffect","useRef","useState","Container","Content","Icon","Input","styles","i18n","useDispatch","useSelector","getBanks","Header","COLORS","height","Dimensions","get","isIOS","Platform","OS","Banks","navigation","route","lang","state","token","auth","user","data","banks","banksLoader","loader","screenLoader","setScreenLoader","dispatch","fetchData","unsubscribe","addListener","renderLoader","loading","flexCenter","mstarda","alignSelf","renderNoData","length","directionColumnCenter","Width_100","heightFull","require","width","bg_gray","bgFullWidth","t","bg_White","paddingHorizontal_20","overflow","paddingBottom","map","bank","i","navigate","paddingVertical_15","marginTop_15","Radius_10","textBold","text_White","textSize_13","alignStart","account_name","marginTop_10","bank_name","account_number","iban_number"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport {View, Text, Image, TouchableOpacity, Dimensions, ActivityIndicator, I18nManager} from \"react-native\";\nimport {Container, Content, Icon, Input} from 'native-base'\nimport styles from '../../assets/styles'\nimport i18n from \"../../locale/i18n\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getBanks} from '../actions';\nimport Header from './Header';\nimport COLORS from \"../consts/colors\";\n\nconst height = Dimensions.get('window').height;\nconst isIOS = Platform.OS === 'ios';\n\nfunction Banks({navigation,route}) {\n\n\n    const lang = useSelector(state => state.lang.lang);\n    const token = useSelector(state => state.auth.user ? state.auth.user.data.token : null);\n    const banks = useSelector(state => state.banks.banks);\n    const banksLoader = useSelector(state => state.banks.loader);\n    const [screenLoader , setScreenLoader ] = useState(true);\n\n    const dispatch = useDispatch();\n\n    function fetchData(){\n        setScreenLoader(true)\n        dispatch(getBanks(lang))\n    }\n    useEffect(() => {\n        fetchData();\n        const unsubscribe = navigation.addListener('focus', () => {\n            fetchData();\n        });\n\n        return unsubscribe;\n    }, [navigation , banksLoader]);\n\n    useEffect(() => {\n        setScreenLoader(false)\n    }, [banks]);\n\n    function renderLoader(){\n        if (screenLoader){\n            return(\n                <View style={[styles.loading, styles.flexCenter, {height:'100%'}]}>\n                    <ActivityIndicator size=\"large\" color={COLORS.mstarda} style={{ alignSelf: 'center' }} />\n                </View>\n            );\n        }\n    }\n\n    function renderNoData() {\n        if (banks && (banks).length <= 0) {\n            return (\n                <View style={[styles.directionColumnCenter , styles.Width_100, styles.heightFull]}>\n                    <Image source={require('../../assets/images/note.png')} resizeMode={'contain'}\n                           style={{alignSelf: 'center', width: 200, height: 200}}/>\n                </View>\n            );\n        }\n\n        return null\n    }\n\n\n\n    return (\n        <Container style={[styles.bg_gray]}>\n            {renderLoader()}\n            <Content contentContainerStyle={[styles.bgFullWidth , styles.bg_gray]}>\n\n                <Header navigation={navigation} title={ i18n.t('banks') } />\n\n                <View style={[styles.bgFullWidth ,styles.bg_White, styles.Width_100 , styles.paddingHorizontal_20 , {overflow:'hidden' , paddingBottom:20}]}>\n\n                    {\n                        banks && (banks).length > 0?\n\n                            banks.map((bank, i) => {\n                                return (\n                                    <TouchableOpacity key={i} onPress={() => navigation.navigate('bankTransfer' , {bank})} style={[styles.bg_gray , styles.paddingHorizontal_20 , styles.paddingVertical_15 , styles.Width_100 , styles.marginTop_15 , styles.Radius_10]}>\n\n                                        <Text style={[styles.textBold , styles.text_White , styles.textSize_13 , styles.alignStart]}>{ i18n.t('accName') } : {bank.account_name}</Text>\n                                        <Text style={[styles.textBold , styles.text_White , styles.textSize_13 , styles.marginTop_10 , styles.alignStart]}>{ i18n.t('bankName') } : {bank.bank_name}</Text>\n                                        <Text style={[styles.textBold , styles.text_White , styles.textSize_13 , styles.marginTop_10 , styles.alignStart]}>{ i18n.t('accNum') } : {bank.account_number}</Text>\n                                        <Text style={[styles.textBold , styles.text_White , styles.textSize_13 , styles.marginTop_10 , styles.alignStart]}>{bank.iban_number} : { i18n.t('iabn') }</Text>\n\n                                    </TouchableOpacity>\n                                )\n                            })\n                            :\n                            renderNoData()\n                    }\n                </View>\n\n            </Content>\n        </Container>\n    );\n}\n\nexport default Banks;\n\n\n"]},"metadata":{},"sourceType":"module"}