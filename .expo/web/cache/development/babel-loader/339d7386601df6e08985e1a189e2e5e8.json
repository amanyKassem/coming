{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ahmedtaha/Documents/work/react/amany/Archive/src/components/ActivationCode.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Container, Content, Form, Icon, Input, Item, Label, Toast } from 'native-base';\nimport styles from \"../../assets/styles\";\nimport i18n from \"../../locale/i18n\";\nimport COLORS from \"../consts/colors\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { activeAccount } from \"../actions\";\nimport AuthHeader from \"../common/AuthHeader\";\nvar isIOS = Platform.OS === 'ios';\n\nfunction ActivationCode(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var lang = useSelector(function (state) {\n    return state.lang.lang;\n  });\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      spinner = _useState2[0],\n      setSpinner = _useState2[1];\n\n  var token = route.params.token;\n  var dispatch = useDispatch();\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activationCode = _useState4[0],\n      setActivationCode = _useState4[1];\n\n  function renderSubmit() {\n    if (activationCode == '') {\n      return React.createElement(View, {\n        style: [styles.mstrdaBtn, styles.Width_100, styles.marginBottom_10, {\n          backgroundColor: '#ddd'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: [styles.textRegular, styles.text_gray, styles.textSize_15],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, i18n.t('confirm')));\n    }\n\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return onConfirm();\n      },\n      style: [styles.mstrdaBtn, styles.Width_100, styles.marginBottom_10],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: [styles.textRegular, styles.text_White, styles.textSize_15],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, i18n.t('confirm')));\n  }\n\n  function onConfirm() {\n    if (activationCode == 1122) {\n      setSpinner(true);\n      dispatch(activeAccount(activationCode, lang, token));\n    } else {\n      Toast.show({\n        text: i18n.t('codeNotMatch'),\n        type: \"danger\",\n        duration: 3000,\n        textStyle: {\n          color: \"white\",\n          fontFamily: 'flatRegular',\n          textAlign: 'center'\n        }\n      });\n    }\n  }\n\n  function renderLoader() {\n    if (spinner) {\n      return React.createElement(View, {\n        style: [styles.loading, styles.flexCenter, {\n          height: '100%'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: COLORS.mstarda,\n        style: {\n          alignSelf: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, renderLoader(), React.createElement(ImageBackground, {\n    source: require(\"../../assets/images/splash_bg.png\"),\n    resizeMode: 'cover',\n    style: styles.imageBackground,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, React.createElement(Content, {\n    contentContainerStyle: [styles.bgFullWidth],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: [styles.bgFullWidth, styles.Width_100],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, React.createElement(AuthHeader, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: [styles.textBold, styles.text_mstarda, styles.textSize_18, styles.SelfCenter, styles.marginBottom_25],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, i18n.t('activateAcc')), React.createElement(View, {\n    style: [styles.directionRowSpace, styles.paddingHorizontal_25],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: [styles.Width_100],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, React.createElement(Form, {\n    style: [styles.Width_100, styles.flexCenter],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, React.createElement(Item, {\n    style: [styles.item],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 37\n    }\n  }, React.createElement(Label, {\n    style: [styles.label],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 41\n    }\n  }, i18n.t('activationCode')), React.createElement(Input, {\n    style: [styles.input],\n    onChangeText: function onChangeText(activationCode) {\n      return setActivationCode(activationCode);\n    },\n    keyboardType: 'number-pad',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 41\n    }\n  })), renderSubmit())))))));\n}\n\nexport default ActivationCode;","map":{"version":3,"sources":["/Users/ahmedtaha/Documents/work/react/amany/Archive/src/components/ActivationCode.js"],"names":["React","useState","useEffect","AsyncStorage","Container","Content","Form","Icon","Input","Item","Label","Toast","styles","i18n","COLORS","useDispatch","useSelector","activeAccount","AuthHeader","isIOS","Platform","OS","ActivationCode","navigation","route","lang","state","spinner","setSpinner","token","params","dispatch","activationCode","setActivationCode","renderSubmit","mstrdaBtn","Width_100","marginBottom_10","backgroundColor","textRegular","text_gray","textSize_15","t","onConfirm","text_White","show","text","type","duration","textStyle","color","fontFamily","textAlign","renderLoader","loading","flexCenter","height","mstarda","alignSelf","require","imageBackground","bgFullWidth","textBold","text_mstarda","textSize_18","SelfCenter","marginBottom_25","directionRowSpace","paddingHorizontal_25","item","label","input"],"mappings":"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","sourcesContent":["import React, { useState , useEffect } from \"react\";\nimport {\n    View,\n    Text,\n    Image,\n    TouchableOpacity,\n    KeyboardAvoidingView,\n    AsyncStorage,\n    ActivityIndicator,\n    Platform,\n    ImageBackground\n} from \"react-native\";\nimport {Container, Content, Form, Icon, Input, Item, Label, Toast} from 'native-base'\nimport styles from '../../assets/styles'\nimport i18n from \"../../locale/i18n\";\nimport COLORS from \"../consts/colors\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport {activeAccount} from \"../actions\";\nimport AuthHeader from \"../common/AuthHeader\";\n\n\nconst isIOS = Platform.OS === 'ios';\n\nfunction ActivationCode({navigation , route}) {\n\n    const lang = useSelector(state => state.lang.lang);\n    const [spinner, setSpinner] = useState(false);\n    const { token } = route.params;\n    const dispatch = useDispatch();\n\n    const [activationCode, setActivationCode] = useState('');\n\n    function renderSubmit() {\n        if (activationCode == '') {\n            return (\n                <View\n                    style={[styles.mstrdaBtn , styles.Width_100  , styles.marginBottom_10 , {\n                        backgroundColor:'#ddd'\n                    }]}\n                >\n                    <Text style={[styles.textRegular , styles.text_gray , styles.textSize_15]}>{ i18n.t('confirm') }</Text>\n                </View>\n            );\n        }\n\n        return (\n            <TouchableOpacity\n                onPress={() => onConfirm()} style={[styles.mstrdaBtn , styles.Width_100 , styles.marginBottom_10]}>\n                <Text style={[styles.textRegular , styles.text_White , styles.textSize_15]}>{ i18n.t('confirm') }</Text>\n            </TouchableOpacity>\n        );\n    }\n\n    function onConfirm() {\n        if (activationCode == 1122) {\n            setSpinner(true);\n            dispatch(activeAccount(activationCode, lang, token));\n        }\n        else {\n            Toast.show({\n                text        \t: i18n.t('codeNotMatch'),\n                type\t\t\t: \"danger\",\n                duration    \t: 3000,\n                textStyle   \t: {\n                    color       \t: \"white\",\n                    fontFamily  \t: 'flatRegular',\n                    textAlign   \t: 'center'\n                }\n            });\n        }\n    }\n\n    function renderLoader(){\n        if (spinner){\n            return(\n                <View style={[styles.loading, styles.flexCenter, {height:'100%'}]}>\n                    <ActivityIndicator size=\"large\" color={COLORS.mstarda} style={{ alignSelf: 'center' }} />\n                </View>\n            );\n        }\n    }\n\n\n    return (\n        <Container >\n            {renderLoader()}\n            <ImageBackground source={require('../../assets/images/splash_bg.png')} resizeMode={'cover'} style={styles.imageBackground}>\n                <Content contentContainerStyle={[styles.bgFullWidth]}>\n                    <View style={[styles.bgFullWidth, styles.Width_100 ]}>\n\n\n                        <AuthHeader navigation={navigation}/>\n\n                        <Text style={[styles.textBold , styles.text_mstarda , styles.textSize_18 ,styles.SelfCenter , styles.marginBottom_25]}>{ i18n.t('activateAcc') }</Text>\n\n                        <View style={[styles.directionRowSpace, styles.paddingHorizontal_25]}>\n                            <KeyboardAvoidingView style={[styles.Width_100]}>\n                                <Form style={[styles.Width_100 , styles.flexCenter]}>\n\n                                    <Item style={[styles.item]}>\n                                        <Label style={[styles.label]}>{ i18n.t('activationCode') }</Label>\n                                        <Input style={[styles.input]}\n                                               onChangeText={(activationCode) => setActivationCode(activationCode)}\n                                               keyboardType={'number-pad'}\n                                        />\n\n                                    </Item>\n\n                                    {renderSubmit()}\n\n                                </Form>\n                            </KeyboardAvoidingView>\n                        </View>\n\n                    </View>\n                </Content>\n            </ImageBackground>\n        </Container>\n    );\n}\n\nexport default ActivationCode;\n\n\n"]},"metadata":{},"sourceType":"module"}