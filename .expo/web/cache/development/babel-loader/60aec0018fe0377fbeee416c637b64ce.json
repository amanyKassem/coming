{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport CONST from \"../consts\";\nimport { Toast } from \"native-base\";\nexport var getSpecialOrders = function getSpecialOrders(lang, status, token, type) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios({\n              url: CONST.url + 'my-special-orders',\n              method: 'POST',\n              params: {\n                lang: lang\n              },\n              data: {\n                status: status,\n                type: type\n              },\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }).then(function (response) {\n              dispatch({\n                type: 'getSpecialOrders',\n                payload: response.data\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var getOrders = function getOrders(lang, status, token, type) {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios({\n              url: CONST.url + 'my-orders',\n              method: 'POST',\n              params: {\n                lang: lang\n              },\n              data: {\n                status: status,\n                type: type\n              },\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }).then(function (response) {\n              dispatch({\n                type: 'getOrders',\n                payload: response.data\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var getOrderDetails = function getOrderDetails(lang, id, token) {\n  return function _callee3(dispatch) {\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(axios({\n              url: CONST.url + 'order-details',\n              method: 'POST',\n              params: {\n                lang: lang\n              },\n              data: {\n                id: id\n              },\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }).then(function (response) {\n              dispatch({\n                type: 'getOrderDetails',\n                payload: response.data\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var getSpecialOrderDetails = function getSpecialOrderDetails(lang, id, token) {\n  return function _callee4(dispatch) {\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(axios({\n              url: CONST.url + 'special-order-details',\n              method: 'POST',\n              params: {\n                lang: lang\n              },\n              data: {\n                id: id\n              },\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }).then(function (response) {\n              dispatch({\n                type: 'getSpecialOrderDetails',\n                payload: response.data\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var getDelegateOrders = function getDelegateOrders(lang, latitude, longitude, status, token) {\n  return function _callee5(dispatch) {\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(axios({\n              url: CONST.url + 'delegates/orders',\n              method: 'POST',\n              params: {\n                lang: lang\n              },\n              data: {\n                latitude: latitude,\n                longitude: longitude,\n                status: status\n              },\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }).then(function (response) {\n              dispatch({\n                type: 'getDelegateOrders',\n                payload: response.data\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var orderCancel = function orderCancel(lang, id, token, navigation, path) {\n  return function _callee6(dispatch) {\n    return _regeneratorRuntime.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(axios({\n              url: CONST.url + 'cancel-order',\n              method: 'POST',\n              params: {\n                lang: lang\n              },\n              data: {\n                id: id\n              },\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }).then(function (response) {\n              if (response.data.success) {\n                navigation.navigate(path);\n              }\n\n              Toast.show({\n                text: response.data.message,\n                type: response.data.success ? \"success\" : \"danger\",\n                duration: 3000,\n                textStyle: {\n                  color: \"white\",\n                  fontFamily: 'flatRegular',\n                  textAlign: 'center'\n                }\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var orderAccept = function orderAccept(lang, id, token, navigation) {\n  return function _callee7(dispatch) {\n    return _regeneratorRuntime.async(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return _regeneratorRuntime.awrap(axios({\n              url: CONST.url + 'accept-special-price',\n              method: 'POST',\n              params: {\n                lang: lang\n              },\n              data: {\n                id: id\n              },\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }).then(function (response) {\n              if (response.data.success) {\n                navigation.navigate('specialOrders');\n              }\n\n              Toast.show({\n                text: response.data.message,\n                type: response.data.success ? \"success\" : \"danger\",\n                duration: 3000,\n                textStyle: {\n                  color: \"white\",\n                  fontFamily: 'flatRegular',\n                  textAlign: 'center'\n                }\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var updateOrder = function updateOrder(lang, id, token, navigation, status) {\n  return function _callee8(dispatch) {\n    return _regeneratorRuntime.async(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return _regeneratorRuntime.awrap(axios({\n              url: CONST.url + 'delegates/update-orders',\n              method: 'POST',\n              params: {\n                lang: lang\n              },\n              data: {\n                id: id\n              },\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }).then(function (response) {\n              if (response.data.success && status === 'READY') {\n                navigation.navigate('orderDetails', {\n                  id: id\n                });\n              } else if (response.data.success && status === 'DELEGATEARRIVED') {\n                navigation.navigate('orderDeliveredSuccessfully');\n              }\n\n              Toast.show({\n                text: response.data.message,\n                type: response.data.success ? \"success\" : \"danger\",\n                duration: 3000,\n                textStyle: {\n                  color: \"white\",\n                  fontFamily: 'flatRegular',\n                  textAlign: 'center'\n                }\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/Users/ahmedtaha/Documents/work/react/amany/Archive/src/actions/OrdersAction.js"],"names":["axios","CONST","Toast","getSpecialOrders","lang","status","token","type","dispatch","url","method","params","data","headers","Authorization","then","response","payload","getOrders","getOrderDetails","id","getSpecialOrderDetails","getDelegateOrders","latitude","longitude","orderCancel","navigation","path","success","navigate","show","text","message","duration","textStyle","color","fontFamily","textAlign","orderAccept","updateOrder"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport CONST from \"../consts\";\nimport {Toast} from \"native-base\";\n\n\nexport const getSpecialOrders = (lang , status , token , type) => {\n    return async (dispatch) => {\n        await axios({\n            url         : CONST.url + 'my-special-orders',\n            method      : 'POST',\n            params      : { lang },\n            data        : {status , type},\n            headers     : {Authorization: 'Bearer ' + token}\n        }).then(response => {\n            dispatch({type: 'getSpecialOrders', payload: response.data});\n        });\n    }\n};\n\nexport const getOrders = (lang , status , token , type) => {\n    return async (dispatch) => {\n        await axios({\n            url         : CONST.url + 'my-orders',\n            method      : 'POST',\n            params      : { lang },\n            data        : {status , type},\n            headers     : {Authorization: 'Bearer ' + token}\n        }).then(response => {\n            dispatch({type: 'getOrders', payload: response.data});\n        });\n    }\n};\n\nexport const getOrderDetails = (lang , id , token) => {\n    return async (dispatch) => {\n        await axios({\n            url         : CONST.url + 'order-details',\n            method      : 'POST',\n            params      : { lang },\n            data        : {id},\n            headers     : {Authorization: 'Bearer ' + token}\n        }).then(response => {\n            dispatch({type: 'getOrderDetails', payload: response.data});\n        });\n    }\n};\n\nexport const getSpecialOrderDetails = (lang , id , token) => {\n    return async (dispatch) => {\n        await axios({\n            url         : CONST.url + 'special-order-details',\n            method      : 'POST',\n            params      : { lang },\n            data        : {id},\n            headers     : {Authorization: 'Bearer ' + token}\n        }).then(response => {\n            dispatch({type: 'getSpecialOrderDetails', payload: response.data});\n        });\n    }\n};\n\n\nexport const getDelegateOrders = (lang , latitude , longitude , status , token) => {\n    return async (dispatch) => {\n        await axios({\n            url         : CONST.url + 'delegates/orders',\n            method      : 'POST',\n            params      : { lang },\n            data        : {latitude , longitude , status},\n            headers     : {Authorization: 'Bearer ' + token}\n        }).then(response => {\n            dispatch({type: 'getDelegateOrders', payload: response.data});\n        });\n    }\n};\n\nexport const orderCancel = (lang , id , token , navigation , path) => {\n    return async (dispatch) => {\n        await axios({\n            url         : CONST.url + 'cancel-order',\n            method      : 'POST',\n            params      : { lang },\n            data        : {id },\n            headers     : {Authorization: 'Bearer ' + token}\n        }).then(response => {\n\n            if (response.data.success) {\n                navigation.navigate(path);\n            }\n\n            Toast.show({\n                text        : response.data.message,\n                type        : response.data.success ? \"success\" : \"danger\",\n                duration    : 3000,\n                textStyle   : {\n                    color       : \"white\",\n                    fontFamily  : 'flatRegular',\n                    textAlign   : 'center'\n                }\n            });\n        });\n\n    }\n};\n\nexport const orderAccept = (lang , id , token , navigation ) => {\n    return async (dispatch) => {\n        await axios({\n            url         : CONST.url + 'accept-special-price',\n            method      : 'POST',\n            params      : { lang },\n            data        : {id },\n            headers     : {Authorization: 'Bearer ' + token}\n        }).then(response => {\n\n            if (response.data.success) {\n                navigation.navigate('specialOrders');\n            }\n\n            Toast.show({\n                text        : response.data.message,\n                type        : response.data.success ? \"success\" : \"danger\",\n                duration    : 3000,\n                textStyle   : {\n                    color       : \"white\",\n                    fontFamily  : 'flatRegular',\n                    textAlign   : 'center'\n                }\n            });\n        });\n\n    }\n};\n\nexport const updateOrder = (lang , id , token , navigation , status) => {\n    return async (dispatch) => {\n        await axios({\n            url         : CONST.url + 'delegates/update-orders',\n            method      : 'POST',\n            params      : { lang },\n            data        : {id },\n            headers     : {Authorization: 'Bearer ' + token}\n        }).then(response => {\n\n            if (response.data.success && status === 'READY') {\n                navigation.navigate('orderDetails' , {id});\n            } else if (response.data.success && status === 'DELEGATEARRIVED') {\n                navigation.navigate('orderDeliveredSuccessfully');\n            }\n\n            Toast.show({\n                text        : response.data.message,\n                type        : response.data.success ? \"success\" : \"danger\",\n                duration    : 3000,\n                textStyle   : {\n                    color       : \"white\",\n                    fontFamily  : 'flatRegular',\n                    textAlign   : 'center'\n                }\n            });\n        });\n\n    }\n};"]},"metadata":{},"sourceType":"module"}