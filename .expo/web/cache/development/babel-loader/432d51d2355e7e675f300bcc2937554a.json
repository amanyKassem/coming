{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport CONST from \"../consts\";\nimport { Toast } from \"native-base\";\nexport var getBanks = function getBanks(lang) {\n  return function (dispatch) {\n    axios({\n      url: CONST.url + 'banks',\n      method: 'GET',\n      params: {\n        lang: lang\n      }\n    }).then(function (response) {\n      dispatch({\n        type: 'getBanks',\n        payload: response.data\n      });\n    });\n  };\n};\nexport var sendTrans = function sendTrans(lang, bank_name, account_name, account_number, total, bank_id, image, token, navigation) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios({\n              url: CONST.url + 'send-transfer',\n              method: 'POST',\n              params: {\n                lang: lang\n              },\n              headers: {\n                Authorization: 'Bearer ' + token\n              },\n              data: {\n                bank_name: bank_name,\n                account_name: account_name,\n                account_number: account_number,\n                total: total,\n                bank_id: bank_id,\n                image: image\n              }\n            }).then(function (response) {\n              if (response.data.success) {\n                navigation.navigate('home');\n              }\n\n              Toast.show({\n                text: response.data.message,\n                type: response.data.success ? \"success\" : \"danger\",\n                duration: 3000,\n                textStyle: {\n                  color: \"white\",\n                  fontFamily: 'flatRegular',\n                  textAlign: 'center'\n                }\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var withdraw = function withdraw(lang, account_number, bank_name, username, amount, token, navigation) {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios({\n              url: CONST.url + 'withdraw-wallet',\n              method: 'POST',\n              params: {\n                lang: lang\n              },\n              headers: {\n                Authorization: 'Bearer ' + token\n              },\n              data: {\n                account_number: account_number,\n                bank_name: bank_name,\n                username: username,\n                amount: amount\n              }\n            }).then(function (response) {\n              if (response.data.success) {\n                navigation.navigate('home');\n              }\n\n              Toast.show({\n                text: response.data.message,\n                type: response.data.success ? \"success\" : \"danger\",\n                duration: 3000,\n                textStyle: {\n                  color: \"white\",\n                  fontFamily: 'flatRegular',\n                  textAlign: 'center'\n                }\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/Users/ahmedtaha/Documents/work/react/amany/Archive/src/actions/BanksAction.js"],"names":["axios","CONST","Toast","getBanks","lang","dispatch","url","method","params","then","response","type","payload","data","sendTrans","bank_name","account_name","account_number","total","bank_id","image","token","navigation","headers","Authorization","success","navigate","show","text","message","duration","textStyle","color","fontFamily","textAlign","withdraw","username","amount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP;AACA,SAAQC,KAAR,QAAoB,aAApB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AAC9B,SAAO,UAACC,QAAD,EAAc;AACjBL,IAAAA,KAAK,CAAC;AACFM,MAAAA,GAAG,EAAWL,KAAK,CAACK,GAAN,GAAY,OADxB;AAEFC,MAAAA,MAAM,EAAQ,KAFZ;AAGFC,MAAAA,MAAM,EAAQ;AAACJ,QAAAA,IAAI,EAAJA;AAAD;AAHZ,KAAD,CAAL,CAIGK,IAJH,CAIQ,UAAAC,QAAQ,EAAI;AAChBL,MAAAA,QAAQ,CAAC;AAACM,QAAAA,IAAI,EAAE,UAAP;AAAmBC,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAArC,OAAD,CAAR;AACH,KAND;AAOH,GARD;AASH,CAVM;AAaP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACV,IAAD,EAAQW,SAAR,EAAoBC,YAApB,EAAkCC,cAAlC,EAAmDC,KAAnD,EAA2DC,OAA3D,EAAqEC,KAArE,EAA6EC,KAA7E,EAAoFC,UAApF,EAAoG;AACzH,SAAO,iBAAOjB,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGL,KAAK,CAAC;AACRM,cAAAA,GAAG,EAAEL,KAAK,CAACK,GAAN,GAAY,eADT;AAERC,cAAAA,MAAM,EAAQ,MAFN;AAGRC,cAAAA,MAAM,EAAQ;AAAEJ,gBAAAA,IAAI,EAAJA;AAAF,eAHN;AAIRmB,cAAAA,OAAO,EAAO;AAACC,gBAAAA,aAAa,EAAE,YAAYH;AAA5B,eAJN;AAKRR,cAAAA,IAAI,EAAU;AAAEE,gBAAAA,SAAS,EAATA,SAAF;AAAcC,gBAAAA,YAAY,EAAZA,YAAd;AAA4BC,gBAAAA,cAAc,EAAdA,cAA5B;AAA6CC,gBAAAA,KAAK,EAALA,KAA7C;AAAqDC,gBAAAA,OAAO,EAAPA,OAArD;AAA+DC,gBAAAA,KAAK,EAALA;AAA/D;AALN,aAAD,CAAL,CAMHX,IANG,CAME,UAAAC,QAAQ,EAAI;AAEhB,kBAAIA,QAAQ,CAACG,IAAT,CAAcY,OAAlB,EAA2B;AACvBH,gBAAAA,UAAU,CAACI,QAAX,CAAoB,MAApB;AACH;;AAEDxB,cAAAA,KAAK,CAACyB,IAAN,CAAW;AACPC,gBAAAA,IAAI,EAAUlB,QAAQ,CAACG,IAAT,CAAcgB,OADrB;AAEPlB,gBAAAA,IAAI,EAAUD,QAAQ,CAACG,IAAT,CAAcY,OAAd,GAAwB,SAAxB,GAAoC,QAF3C;AAGPK,gBAAAA,QAAQ,EAAM,IAHP;AAIPC,gBAAAA,SAAS,EAAS;AACdC,kBAAAA,KAAK,EAAa,OADJ;AAEdC,kBAAAA,UAAU,EAAQ,aAFJ;AAGdC,kBAAAA,SAAS,EAAS;AAHJ;AAJX,eAAX;AAWH,aAvBK,CADH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AA0BH,CA3BM;AA8BP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAC/B,IAAD,EAAQa,cAAR,EAAyBF,SAAzB,EAAqCqB,QAArC,EAAgDC,MAAhD,EAAyDhB,KAAzD,EAAgEC,UAAhE,EAAgF;AACpG,SAAO,kBAAOjB,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGL,KAAK,CAAC;AACRM,cAAAA,GAAG,EAAEL,KAAK,CAACK,GAAN,GAAY,iBADT;AAERC,cAAAA,MAAM,EAAQ,MAFN;AAGRC,cAAAA,MAAM,EAAQ;AAAEJ,gBAAAA,IAAI,EAAJA;AAAF,eAHN;AAIRmB,cAAAA,OAAO,EAAO;AAACC,gBAAAA,aAAa,EAAE,YAAYH;AAA5B,eAJN;AAKRR,cAAAA,IAAI,EAAU;AAAEI,gBAAAA,cAAc,EAAdA,cAAF;AAAmBF,gBAAAA,SAAS,EAATA,SAAnB;AAA+BqB,gBAAAA,QAAQ,EAARA,QAA/B;AAA0CC,gBAAAA,MAAM,EAANA;AAA1C;AALN,aAAD,CAAL,CAMH5B,IANG,CAME,UAAAC,QAAQ,EAAI;AAEhB,kBAAIA,QAAQ,CAACG,IAAT,CAAcY,OAAlB,EAA2B;AACvBH,gBAAAA,UAAU,CAACI,QAAX,CAAoB,MAApB;AACH;;AAEDxB,cAAAA,KAAK,CAACyB,IAAN,CAAW;AACPC,gBAAAA,IAAI,EAAUlB,QAAQ,CAACG,IAAT,CAAcgB,OADrB;AAEPlB,gBAAAA,IAAI,EAAUD,QAAQ,CAACG,IAAT,CAAcY,OAAd,GAAwB,SAAxB,GAAoC,QAF3C;AAGPK,gBAAAA,QAAQ,EAAM,IAHP;AAIPC,gBAAAA,SAAS,EAAS;AACdC,kBAAAA,KAAK,EAAa,OADJ;AAEdC,kBAAAA,UAAU,EAAQ,aAFJ;AAGdC,kBAAAA,SAAS,EAAS;AAHJ;AAJX,eAAX;AAWH,aAvBK,CADH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AA0BH,CA3BM","sourcesContent":["import axios from \"axios\";\nimport CONST from \"../consts\";\nimport {Toast} from \"native-base\";\n\nexport const getBanks = (lang) => {\n    return (dispatch) => {\n        axios({\n            url         : CONST.url + 'banks',\n            method      : 'GET',\n            params      : {lang},\n        }).then(response => {\n            dispatch({type: 'getBanks', payload: response.data});\n        });\n    }\n};\n\n\nexport const sendTrans = (lang , bank_name , account_name ,account_number , total , bank_id , image , token, navigation ) => {\n    return async (dispatch) => {\n        await axios({\n            url: CONST.url + 'send-transfer',\n            method      : 'POST',\n            params      : { lang },\n            headers     : {Authorization: 'Bearer ' + token},\n            data        : { bank_name , account_name ,account_number , total , bank_id , image  }\n        }).then(response => {\n\n            if (response.data.success) {\n                navigation.navigate('home');\n            }\n\n            Toast.show({\n                text        : response.data.message,\n                type        : response.data.success ? \"success\" : \"danger\",\n                duration    : 3000,\n                textStyle       : {\n                    color           : \"white\",\n                    fontFamily      : 'flatRegular',\n                    textAlign       : 'center'\n                }\n            });\n\n        })\n    }\n}\n\n\nexport const withdraw = (lang , account_number , bank_name , username , amount , token, navigation ) => {\n    return async (dispatch) => {\n        await axios({\n            url: CONST.url + 'withdraw-wallet',\n            method      : 'POST',\n            params      : { lang },\n            headers     : {Authorization: 'Bearer ' + token},\n            data        : { account_number , bank_name , username , amount  }\n        }).then(response => {\n\n            if (response.data.success) {\n                navigation.navigate('home');\n            }\n\n            Toast.show({\n                text        : response.data.message,\n                type        : response.data.success ? \"success\" : \"danger\",\n                duration    : 3000,\n                textStyle       : {\n                    color           : \"white\",\n                    fontFamily      : 'flatRegular',\n                    textAlign       : 'center'\n                }\n            });\n\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}