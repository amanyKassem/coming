{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Toast } from 'native-base';\nimport CONST from \"../consts\";\nexport var userLogin = function userLogin(phone, password, deviceId, lang, navigation) {\n  return function (dispatch) {\n    dispatch({\n      type: 'login_user'\n    });\n    axios.post(CONST.url + 'sign-in', {\n      phone: phone,\n      password: password,\n      lang: lang,\n      device_id: deviceId\n    }).then(function (response) {\n      return handelLogin(dispatch, response.data, navigation);\n    }).catch(function (error) {\n      return console.warn(error.data);\n    });\n  };\n};\nexport var register = function register(data, navigation) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('deviceID').then(function (device_id) {\n              console.log('token', device_id);\n              axios({\n                url: CONST.url + 'sign-up',\n                method: 'POST',\n                data: {\n                  name: data.username,\n                  phone: data.phone,\n                  email: data.mail,\n                  password: data.password,\n                  user_type: data.userType,\n                  device_id: device_id\n                },\n                params: {\n                  lang: data.lang\n                }\n              }).then(function (response) {\n                dispatch({\n                  type: 'register',\n                  payload: response.data\n                });\n\n                if (response.data.success) {\n                  navigation.navigate('activationCode', {\n                    token: response.data.data.token\n                  });\n                }\n\n                console.log('message', response.data.message);\n                Toast.show({\n                  text: response.data.message,\n                  type: response.data.success ? \"success\" : \"danger\",\n                  duration: 3000,\n                  textStyle: {\n                    color: \"white\",\n                    fontFamily: 'flatRegular',\n                    textAlign: 'center'\n                  }\n                });\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var activeAccount = function activeAccount(code, lang, token) {\n  return function (dispatch) {\n    axios({\n      url: CONST.url + 'activate',\n      method: 'POST',\n      data: {\n        code: code\n      },\n      params: {\n        lang: lang\n      },\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(function (response) {\n      if (response.data.success) {\n        dispatch({\n          type: 'active_account',\n          data: response.data\n        });\n      }\n\n      Toast.show({\n        text: response.data.message,\n        type: response.data.success ? \"success\" : \"danger\",\n        duration: 3000,\n        textStyle: {\n          color: \"white\",\n          fontFamily: 'flatRegular',\n          textAlign: 'center'\n        }\n      });\n    });\n  };\n};\nexport var checkPhone = function checkPhone(phone, lang, navigation) {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios({\n              url: CONST.url + 'forget-password',\n              method: 'POST',\n              data: {\n                phone: phone\n              },\n              params: {\n                lang: lang\n              }\n            }).then(function (response) {\n              if (response.data.success) navigation.navigate('changePass', {\n                token: response.data.data.token\n              });\n              Toast.show({\n                text: response.data.message,\n                type: response.data.success ? \"success\" : \"danger\",\n                duration: 3000,\n                textStyle: {\n                  color: \"white\",\n                  fontFamily: 'flatRegular',\n                  textAlign: 'center'\n                }\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var resetPassword = function resetPassword(password, code, token, lang, navigation) {\n  return function _callee3(dispatch) {\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(axios({\n              url: CONST.url + 'reset-password',\n              method: 'POST',\n              data: {\n                password: password,\n                code: code\n              },\n              params: {\n                lang: lang\n              },\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }).then(function (response) {\n              if (response.data.success) navigation.navigate('login');\n              Toast.show({\n                text: response.data.message,\n                type: response.data.success ? \"success\" : \"danger\",\n                duration: 3000,\n                textStyle: {\n                  color: \"white\",\n                  fontFamily: 'flatRegular',\n                  textAlign: 'center'\n                }\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var getDelegateAvailable = function getDelegateAvailable(lang, token) {\n  return function (dispatch) {\n    axios({\n      url: CONST.url + 'delegate-availability',\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + token\n      },\n      params: {\n        lang: lang\n      }\n    }).then(function (response) {\n      dispatch({\n        type: 'delegateIsAvailable'\n      });\n      Toast.show({\n        text: response.data.message,\n        type: response.data.success ? \"success\" : \"danger\",\n        duration: 3000,\n        textStyle: {\n          color: \"white\",\n          fontFamily: 'flatRegular',\n          textAlign: 'center'\n        }\n      });\n    });\n  };\n};\nexport var tempAuth = function tempAuth() {\n  return function (dispatch) {\n    dispatch({\n      type: 'temp_auth'\n    });\n  };\n};\n\nvar handelLogin = function handelLogin(dispatch, data, navigation) {\n  if (!data.success) {\n    loginFailed(dispatch, data, navigation);\n  } else {\n    loginSuccess(dispatch, data, navigation);\n  }\n\n  Toast.show({\n    text: data.message,\n    type: data.success ? \"success\" : \"danger\",\n    duration: 3000,\n    textStyle: {\n      color: \"white\",\n      fontFamily: 'flatRegular',\n      textAlign: 'center'\n    }\n  });\n};\n\nvar loginSuccess = function loginSuccess(dispatch, data, navigation) {\n  AsyncStorage.setItem('token', JSON.stringify(data.data.token)).then(function () {\n    return dispatch({\n      type: 'login_success',\n      data: data\n    });\n  });\n};\n\nvar loginFailed = function loginFailed(dispatch, error, navigation) {\n  if (error.data.active === false) {\n    navigation.navigate('activationCode', {\n      token: error.data.token\n    });\n  }\n\n  dispatch({\n    type: 'login_failed',\n    error: error\n  });\n};","map":{"version":3,"sources":["/Users/ahmedtaha/Documents/work/react/amany/Archive/src/actions/AuthAction.js"],"names":["axios","AsyncStorage","Toast","CONST","userLogin","phone","password","deviceId","lang","navigation","dispatch","type","post","url","device_id","then","response","handelLogin","data","catch","error","console","warn","register","getItem","log","method","name","username","email","mail","user_type","userType","params","payload","success","navigate","token","message","show","text","duration","textStyle","color","fontFamily","textAlign","activeAccount","code","headers","Authorization","checkPhone","resetPassword","getDelegateAvailable","tempAuth","loginFailed","loginSuccess","setItem","JSON","stringify","active"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { AsyncStorage, Platform } from 'react-native';\nimport { Toast } from 'native-base'\nimport CONST from '../consts';\n\nexport const userLogin = (phone, password, deviceId, lang, navigation) => {\n    return (dispatch) => {\n\n        dispatch({type: 'login_user'});\n\n        axios.post(\n            CONST.url + 'sign-in',\n            {phone, password, lang, device_id: deviceId})\n            .then(\n                response => handelLogin(dispatch, response.data , navigation)\n            )\n            .catch(\n                error => console.warn(error.data)\n            );\n    };\n};\n\nexport const register = (data, navigation) => {\n\treturn async (dispatch) => {\n\t\tawait AsyncStorage.getItem('deviceID').then(device_id => {\n\t\t\tconsole.log('token', device_id)\n\t\t\taxios({\n\t\t\t\turl: CONST.url + 'sign-up',\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata: {\n\t\t\t\t\tname\t\t\t    : data.username,\n\t\t\t\t\tphone\t\t\t    : data.phone,\n\t\t\t\t\temail\t\t\t\t: data.mail,\n\t\t\t\t\tpassword\t\t    : data.password,\n\t\t\t\t\tuser_type\t\t    : data.userType,\n\t\t\t\t\tdevice_id\n\t\t\t\t},\n\t\t\t\tparams: { lang \t\t\t    : data.lang },\n\t\t\t}).then(response => {\n\t\t\t\tdispatch({type: 'register', payload: response.data});\n\t\t\t\tif (response.data.success){\n\t\t\t\t\tnavigation.navigate('activationCode', {\n\t\t\t\t\t\ttoken: response.data.data.token\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconsole.log('message', response.data.message);\n\n\t\t\t\tToast.show({\n\t\t\t\t\ttext        \t: response.data.message,\n\t\t\t\t\ttype\t\t\t: response.data.success ? \"success\" : \"danger\",\n\t\t\t\t\tduration    \t: 3000,\n\t\t\t\t\ttextStyle   \t: {\n\t\t\t\t\t\tcolor       \t: \"white\",\n\t\t\t\t\t\tfontFamily  \t: 'flatRegular',\n\t\t\t\t\t\ttextAlign   \t: 'center'\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t})\n\t\t})\n\n\t}\n};\n\n\nexport const activeAccount = (code, lang, token) => {\n\treturn (dispatch) => {\n\t\taxios({\n\t\t\turl: CONST.url + 'activate',\n\t\t\tmethod: 'POST',\n\t\t\tdata: {code},\n\t\t\tparams: { lang },\n\t\t\theaders: {\n\t\t\t\tAuthorization: 'Bearer ' + token,\n\n\t\t\t}\n\t\t}).then(response => {\n\n\t\t\tif (response.data.success) {\n\t\t\t\tdispatch({type: 'active_account', data: response.data});\n\t\t\t}\n\n\n\n\t\t\tToast.show({\n\t\t\t\ttext        \t: response.data.message,\n\t\t\t\ttype\t\t\t: response.data.success ? \"success\" : \"danger\",\n\t\t\t\tduration    \t: 3000,\n\t\t\t\ttextStyle   \t: {\n\t\t\t\t\tcolor       \t: \"white\",\n\t\t\t\t\tfontFamily  \t: 'flatRegular',\n\t\t\t\t\ttextAlign   \t: 'center'\n\t\t\t\t}\n\t\t\t});\n\n\t\t})\n\n\t}\n};\n\n\nexport const checkPhone = (phone, lang, navigation) => {\n\treturn async dispatch => {\n\t\tawait axios({\n\t\t\turl: CONST.url + 'forget-password',\n\t\t\tmethod: 'POST',\n\t\t\tdata: { phone },\n\t\t\tparams: { lang },\n\t\t}).then(response => {\n\t\t\tif (response.data.success)\n\t\t\t\tnavigation.navigate('changePass', { token: response.data.data.token});\n\n\t\t\tToast.show({\n\t\t\t\ttext        \t: response.data.message,\n\t\t\t\ttype\t\t\t: response.data.success ? \"success\" : \"danger\",\n\t\t\t\tduration    \t: 3000,\n\t\t\t\ttextStyle   \t: {\n\t\t\t\t\tcolor       \t: \"white\",\n\t\t\t\t\tfontFamily  \t: 'flatRegular',\n\t\t\t\t\ttextAlign   \t: 'center'\n\t\t\t\t}\n\t\t\t});\n\n\t\t})\n\t}\n}\n\nexport const resetPassword = (password , code , token, lang, navigation) => {\n\treturn async (dispatch) => {\n\t\tawait axios({\n\t\t\turl: CONST.url + 'reset-password',\n\t\t\tmethod: 'POST',\n\t\t\tdata: { password , code },\n\t\t\tparams: { lang },\n\t\t\theaders: {\n\t\t\t\tAuthorization: 'Bearer ' + token,\n\n\t\t\t}\n\t\t}).then(response => {\n\t\t\tif (response.data.success)\n\t\t\t\tnavigation.navigate('login');\n\n\t\t\tToast.show({\n\t\t\t\ttext        \t: response.data.message,\n\t\t\t\ttype\t\t\t: response.data.success ? \"success\" : \"danger\",\n\t\t\t\tduration    \t: 3000,\n\t\t\t\ttextStyle   \t: {\n\t\t\t\t\tcolor       \t: \"white\",\n\t\t\t\t\tfontFamily  \t: 'flatRegular',\n\t\t\t\t\ttextAlign   \t: 'center'\n\t\t\t\t}\n\t\t\t});\n\n\t\t})\n\t}\n};\n\n\n\nexport const getDelegateAvailable = (lang , token ) => {\n\treturn (dispatch) => {\n\t\taxios({\n\t\t\turl         : CONST.url + 'delegate-availability',\n\t\t\tmethod      : 'POST',\n\t\t\theaders     : {Authorization: 'Bearer ' + token},\n\t\t\tparams      : { lang },\n\t\t}).then(response => {\n\t\t\tdispatch({type: 'delegateIsAvailable'});\n\t\t\tToast.show({\n\t\t\t\ttext        : response.data.message,\n\t\t\t\ttype        : response.data.success ? \"success\" : \"danger\",\n\t\t\t\tduration    : 3000,\n\t\t\t\ttextStyle   : {\n\t\t\t\t\tcolor       : \"white\",\n\t\t\t\t\tfontFamily  : 'flatRegular',\n\t\t\t\t\ttextAlign   : 'center'\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t}\n};\n\n\nexport const tempAuth = () => {\n    return (dispatch) => {\n        dispatch({type: 'temp_auth'});\n    };\n};\n\nconst handelLogin = (dispatch, data , navigation) => {\n    if (!data.success){\n        loginFailed(dispatch, data , navigation)\n    }else{\n        loginSuccess(dispatch, data , navigation)\n    }\n\n    Toast.show({\n        text        : data.message,\n        type        : data.success ? \"success\" : \"danger\",\n        duration    : 3000,\n        textStyle   : {\n            color       : \"white\",\n            fontFamily  : 'flatRegular',\n            textAlign   : 'center'\n        }\n    });\n};\n\n\nconst loginSuccess = (dispatch, data , navigation) => {\n    AsyncStorage.setItem('token', JSON.stringify(data.data.token))\n        .then(() => dispatch({type: 'login_success', data }));\n};\n\nconst loginFailed = (dispatch, error , navigation) => {\n\tif(error.data.active === false) {\n\t\tnavigation.navigate('activationCode', {\n\t\t\ttoken: error.data.token\n\t\t});\n\t}\n    dispatch({type: 'login_failed', error});\n};\n"]},"metadata":{},"sourceType":"module"}