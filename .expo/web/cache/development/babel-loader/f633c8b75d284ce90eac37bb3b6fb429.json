{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ahmedtaha/Documents/work/react/amany/Archive/src/common/SelectLoc.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Container, Content, Icon, Input } from 'native-base';\nimport styles from \"../../assets/styles\";\nimport i18n from \"../../locale/i18n\";\nimport Swiper from 'react-native-swiper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Header from \"./Header\";\nimport COLORS from \"../consts/colors\";\nimport * as Permissions from \"expo-permissions\";\nimport * as Location from \"expo-location\";\nimport { useIsFocused } from \"@react-navigation/native\";\nvar latitudeDelta = 0.922;\nvar longitudeDelta = 0.521;\nvar height = Dimensions.get('window').height;\nvar isIOS = Platform.OS === 'ios';\n\nfunction SelectLoc(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      screenLoader = _useState2[0],\n      setScreenLoader = _useState2[1];\n\n  var _useState3 = useState({\n    latitude: '',\n    longitude: '',\n    latitudeDelta: latitudeDelta,\n    longitudeDelta: longitudeDelta\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mapRegion = _useState4[0],\n      setMapRegion = _useState4[1];\n\n  var mapRef = useRef(null);\n  var isFocused = useIsFocused();\n  var user = useSelector(function (state) {\n    return state.auth.user != null ? state.auth.user.data : null;\n  });\n\n  var fetchData = function fetchData() {\n    var _await$Permissions$as, status, userLocation, _await$Location$getCu, _await$Location$getCu2, latitude, longitude;\n\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION));\n\n          case 2:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n            userLocation = {};\n\n            if (!(status !== 'granted')) {\n              _context.next = 9;\n              break;\n            }\n\n            alert('صلاحيات تحديد موقعك الحالي ملغاه');\n            _context.next = 18;\n            break;\n\n          case 9:\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n          case 11:\n            _await$Location$getCu = _context.sent;\n            _await$Location$getCu2 = _await$Location$getCu.coords;\n            latitude = _await$Location$getCu2.latitude;\n            longitude = _await$Location$getCu2.longitude;\n            userLocation = {\n              latitude: latitude,\n              longitude: longitude,\n              latitudeDelta: latitudeDelta,\n              longitudeDelta: longitudeDelta\n            };\n            setMapRegion(userLocation);\n            isIOS ? mapRef.current.animateToRegion(userLocation, 1000) : false;\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    setScreenLoader(true);\n\n    if (mapRegion.longitude) {\n      setScreenLoader(false);\n    }\n\n    if (isFocused) {\n      fetchData();\n    }\n  }, [isFocused, mapRegion.longitude]);\n\n  function renderLoader() {\n    if (screenLoader) {\n      return React.createElement(View, {\n        style: [styles.loading, styles.flexCenter, {\n          height: '100%'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: COLORS.mstarda,\n        style: {\n          alignSelf: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  return React.createElement(Container, {\n    style: [styles.bg_gray],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, renderLoader(), React.createElement(Content, {\n    contentContainerStyle: [styles.bgFullWidth, styles.bg_gray],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, React.createElement(Header, {\n    navigation: navigation,\n    title: i18n.t('selectLoc'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: [styles.bgFullWidth, styles.bg_White, styles.Width_100, styles.paddingHorizontal_20, {\n      overflow: 'hidden',\n      paddingBottom: 20\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: [styles.directionColumnCenter, styles.bgFullWidth],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: user && user.user_type === 2 ? require(\"../../assets/images/home_order_vector.png\") : require(\"../../assets/images/vector_delivery.png\"),\n    style: [styles.icon150, styles.marginBottom_50],\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('tabs', {\n        screen: 'home',\n        params: {\n          latitude: mapRegion.latitude,\n          longitude: mapRegion.longitude\n        }\n      });\n    },\n    style: [styles.mstrdaBtn, styles.Width_100, styles.marginBottom_10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: [styles.textRegular, styles.text_White, styles.textSize_15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, i18n.t('currentLoc'))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('newLocation');\n    },\n    style: [styles.mstrdaBtn, styles.Width_100, styles.marginBottom_10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: [styles.textRegular, styles.text_White, styles.textSize_15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, i18n.t('changeLoc')))))));\n}\n\nexport default SelectLoc;","map":{"version":3,"sources":["/Users/ahmedtaha/Documents/work/react/amany/Archive/src/common/SelectLoc.js"],"names":["React","useEffect","useRef","useState","Container","Content","Icon","Input","styles","i18n","Swiper","useSelector","useDispatch","Header","COLORS","Permissions","Location","useIsFocused","latitudeDelta","longitudeDelta","height","Dimensions","get","isIOS","Platform","OS","SelectLoc","navigation","route","screenLoader","setScreenLoader","latitude","longitude","mapRegion","setMapRegion","mapRef","isFocused","user","state","auth","data","fetchData","askAsync","LOCATION","status","userLocation","alert","getCurrentPositionAsync","coords","current","animateToRegion","renderLoader","loading","flexCenter","mstarda","alignSelf","bg_gray","bgFullWidth","t","bg_White","Width_100","paddingHorizontal_20","overflow","paddingBottom","directionColumnCenter","user_type","require","icon150","marginBottom_50","navigate","screen","params","mstrdaBtn","marginBottom_10","textRegular","text_White","textSize_15"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport {\n    View,\n    Text,\n    Image,\n    TouchableOpacity,\n    Dimensions,\n    FlatList,\n    I18nManager,\n    ImageBackground,\n    ActivityIndicator\n} from \"react-native\";\nimport {Container, Content, Icon, Input} from 'native-base'\nimport styles from '../../assets/styles'\nimport i18n from \"../../locale/i18n\";\nimport Swiper from 'react-native-swiper';\nimport {useSelector, useDispatch} from 'react-redux';\nimport Header from './Header';\nimport COLORS from \"../consts/colors\";\nimport * as Permissions from \"expo-permissions\";\nimport * as Location from \"expo-location\";\nimport {useIsFocused} from \"@react-navigation/native\";\nconst latitudeDelta = 0.922;\nconst longitudeDelta = 0.521;\n\nconst height = Dimensions.get('window').height;\nconst isIOS = Platform.OS === 'ios';\n\nfunction SelectLoc({navigation,route}) {\n\n    const [screenLoader , setScreenLoader ] = useState(false);\n    const [mapRegion, setMapRegion] = useState({\n        latitude: '',\n        longitude: '',\n        latitudeDelta,\n        longitudeDelta\n    });\n    let mapRef = useRef(null);\n    const isFocused = useIsFocused();\n\n    const user = useSelector(state =>  state.auth.user != null ? state.auth.user.data : null );\n\n    const fetchData = async () => {\n        let { status } = await Permissions.askAsync(Permissions.LOCATION);\n        let userLocation = {};\n        if (status !== 'granted') {\n            alert('صلاحيات تحديد موقعك الحالي ملغاه');\n        } else {\n            const { coords: { latitude, longitude } } = await Location.getCurrentPositionAsync({});\n\n            userLocation = { latitude, longitude , latitudeDelta , longitudeDelta};\n\n            setMapRegion(userLocation);\n            isIOS ? mapRef.current.animateToRegion(userLocation, 1000) : false;\n        }\n    }\n\n    useEffect(() => {\n        setScreenLoader(true);\n        if(mapRegion.longitude) {\n            setScreenLoader(false)\n        }\n        if (isFocused) {\n            fetchData()\n        }\n    }, [isFocused , mapRegion.longitude])\n\n    function renderLoader(){\n        if (screenLoader){\n            return(\n                <View style={[styles.loading, styles.flexCenter, {height:'100%'}]}>\n                    <ActivityIndicator size=\"large\" color={COLORS.mstarda} style={{ alignSelf: 'center' }} />\n                </View>\n            );\n        }\n    }\n\n\n    return (\n        <Container style={[styles.bg_gray]}>\n            {renderLoader()}\n            <Content contentContainerStyle={[styles.bgFullWidth , styles.bg_gray]}>\n\n                <Header navigation={navigation} title={ i18n.t('selectLoc') } />\n\n                <View style={[styles.bgFullWidth ,styles.bg_White, styles.Width_100 , styles.paddingHorizontal_20 , {overflow:'hidden' , paddingBottom:20}]}>\n\n                    <View style={[styles.directionColumnCenter , styles.bgFullWidth]}>\n\n                        <Image source={user && user.user_type === 2 ? require('../../assets/images/home_order_vector.png') : require('../../assets/images/vector_delivery.png')} style={[styles.icon150 , styles.marginBottom_50]} resizeMode='contain' />\n\n                        <TouchableOpacity  onPress={() => navigation.navigate('tabs', {screen: 'home' ,  params: { latitude: mapRegion.latitude , longitude:mapRegion.longitude }})} style={[styles.mstrdaBtn , styles.Width_100 , styles.marginBottom_10]}>\n                            <Text style={[styles.textRegular , styles.text_White , styles.textSize_15]}>{ i18n.t('currentLoc') }</Text>\n                        </TouchableOpacity>\n\n\n                        <TouchableOpacity onPress={() => navigation.navigate('newLocation')} style={[styles.mstrdaBtn , styles.Width_100 , styles.marginBottom_10]}>\n                            <Text style={[styles.textRegular , styles.text_White , styles.textSize_15]}>{ i18n.t('changeLoc') }</Text>\n                        </TouchableOpacity>\n\n                    </View>\n\n                </View>\n\n            </Content>\n        </Container>\n    );\n}\n\nexport default SelectLoc;\n\n\n"]},"metadata":{},"sourceType":"module"}