{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ahmedtaha/Documents/work/react/amany/Archive/src/common/NewLocation.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Container, Content, Icon, Input } from 'native-base';\nimport styles from \"../../assets/styles\";\nimport i18n from \"../../locale/i18n\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPlaces, deletePlace } from \"../actions\";\nimport Header from \"./Header\";\nimport COLORS from \"../consts/colors\";\nvar height = Dimensions.get('window').height;\nvar isIOS = Platform.OS === 'ios';\nvar latitudeDelta = 0.922;\nvar longitudeDelta = 0.521;\n\nfunction NewLocation(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var lang = useSelector(function (state) {\n    return state.lang.lang;\n  });\n  var token = useSelector(function (state) {\n    return state.auth.user ? state.auth.user.data.token : null;\n  });\n  var places = useSelector(function (state) {\n    return state.places.places;\n  });\n  var placesLoader = useSelector(function (state) {\n    return state.places.loader;\n  });\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      screenLoader = _useState2[0],\n      setScreenLoader = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  function fetchData() {\n    setScreenLoader(true);\n    dispatch(getPlaces(lang, token));\n  }\n\n  function deletePla(id) {\n    dispatch(deletePlace(lang, id, token));\n  }\n\n  useEffect(function () {\n    fetchData();\n    var unsubscribe = navigation.addListener('focus', function () {\n      fetchData();\n    });\n    return unsubscribe;\n  }, [navigation, placesLoader]);\n  useEffect(function () {\n    setScreenLoader(false);\n  }, [places]);\n\n  function renderLoader() {\n    if (screenLoader) {\n      return React.createElement(View, {\n        style: [styles.loading, styles.flexCenter, {\n          height: '100%'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: COLORS.mstarda,\n        style: {\n          alignSelf: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  function renderNoData() {\n    if (places && places.length <= 0) {\n      return React.createElement(View, {\n        style: [styles.directionColumnCenter, styles.Width_100, {\n          height: height - 250\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/images/note.png\"),\n        resizeMode: 'contain',\n        style: {\n          alignSelf: 'center',\n          width: 200,\n          height: 200\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return null;\n  }\n\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, renderLoader(), React.createElement(Content, {\n    contentContainerStyle: [styles.bgFullWidth],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, React.createElement(Header, {\n    navigation: navigation,\n    title: i18n.t('selectNewLoc'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: [styles.bgFullWidth, styles.bg_White, styles.Width_100, styles.paddingHorizontal_25, styles.paddingVertical_20, {\n      overflow: 'hidden'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, places && places.length > 0 ? places.map(function (place, i) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('tabs', {\n          screen: 'home',\n          params: {\n            latitude: place.latitude,\n            longitude: place.longitude\n          }\n        });\n      },\n      style: [styles.directionRowSpace, styles.paddingVertical_15, {\n        borderBottomWidth: 1,\n        borderBottomColor: '#ddd'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }\n    }, React.createElement(View, {\n      style: [styles.directionRow, {\n        flex: 1\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 41\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../assets/images/circle_location.png\"),\n      style: [styles.icon12, {\n        marginRight: 7\n      }],\n      resizeMode: \"contain\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 45\n      }\n    }), React.createElement(Text, {\n      style: [styles.textRegular, styles.text_midGray, styles.textSize_15, {\n        lineHeight: 22\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 45\n      }\n    }, place.name)), React.createElement(View, {\n      style: [styles.directionRow],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 41\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('setLocation', {\n          id: place.id,\n          latitude: place.latitude,\n          longitude: place.longitude,\n          name: place.name,\n          address: place.address,\n          edit: true\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 45\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../assets/images/edit_orange.png\"),\n      style: [styles.icon23],\n      resizeMode: \"contain\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 49\n      }\n    })), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return deletePla(place.id);\n      },\n      style: {\n        borderLeftWidth: 1,\n        borderLeftColor: '#ddd',\n        paddingLeft: 15,\n        marginLeft: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 45\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../assets/images/delete_red.png\"),\n      style: [styles.icon20],\n      resizeMode: \"contain\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 49\n      }\n    }))));\n  }) : renderNoData(), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('setLocation', {\n        edit: false\n      });\n    },\n    style: [styles.mstrdaBtn, styles.Width_100, styles.marginBottom_10, styles.marginTop_55],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: [styles.textRegular, styles.text_White, styles.textSize_15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, i18n.t('newLoc'))))));\n}\n\nexport default NewLocation;","map":{"version":3,"sources":["/Users/ahmedtaha/Documents/work/react/amany/Archive/src/common/NewLocation.js"],"names":["React","useEffect","useRef","useState","Container","Content","Icon","Input","styles","i18n","useDispatch","useSelector","getPlaces","deletePlace","Header","COLORS","height","Dimensions","get","isIOS","Platform","OS","latitudeDelta","longitudeDelta","NewLocation","navigation","route","lang","state","token","auth","user","data","places","placesLoader","loader","screenLoader","setScreenLoader","dispatch","fetchData","deletePla","id","unsubscribe","addListener","renderLoader","loading","flexCenter","mstarda","alignSelf","renderNoData","length","directionColumnCenter","Width_100","require","width","bgFullWidth","t","bg_White","paddingHorizontal_25","paddingVertical_20","overflow","map","place","i","navigate","screen","params","latitude","longitude","directionRowSpace","paddingVertical_15","borderBottomWidth","borderBottomColor","directionRow","flex","icon12","marginRight","textRegular","text_midGray","textSize_15","lineHeight","name","address","edit","icon23","borderLeftWidth","borderLeftColor","paddingLeft","marginLeft","icon20","mstrdaBtn","marginBottom_10","marginTop_55","text_White"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;;;;;;;;;;AAYA,SAAQC,SAAR,EAAmBC,OAAnB,EAA4BC,IAA5B,EAAkCC,KAAlC,QAA8C,aAA9C;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,EAAmBC,WAAnB;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,MAAxC;AACA,IAAMG,KAAK,GAAGC,QAAQ,CAACC,EAAT,KAAgB,KAA9B;AACA,IAAMC,aAAa,GAAG,KAAtB;AACA,IAAMC,cAAc,GAAG,KAAvB;;AAEA,SAASC,WAAT,OAAyC;AAAA;;AAAA,MAAnBC,UAAmB,QAAnBA,UAAmB;AAAA,MAARC,KAAQ,QAARA,KAAQ;AAErC,MAAMC,IAAI,GAAGhB,WAAW,CAAC,UAAAiB,KAAK;AAAA,WAAIA,KAAK,CAACD,IAAN,CAAWA,IAAf;AAAA,GAAN,CAAxB;AACA,MAAME,KAAK,GAAGlB,WAAW,CAAC,UAAAiB,KAAK;AAAA,WAAIA,KAAK,CAACE,IAAN,CAAWC,IAAX,GAAkBH,KAAK,CAACE,IAAN,CAAWC,IAAX,CAAgBC,IAAhB,CAAqBH,KAAvC,GAA+C,IAAnD;AAAA,GAAN,CAAzB;AACA,MAAMI,MAAM,GAAGtB,WAAW,CAAC,UAAAiB,KAAK;AAAA,WAAIA,KAAK,CAACK,MAAN,CAAaA,MAAjB;AAAA,GAAN,CAA1B;AACA,MAAMC,YAAY,GAAGvB,WAAW,CAAC,UAAAiB,KAAK;AAAA,WAAIA,KAAK,CAACK,MAAN,CAAaE,MAAjB;AAAA,GAAN,CAAhC;;AALqC,kBAMKhC,QAAQ,CAAC,IAAD,CANb;AAAA;AAAA,MAM9BiC,YAN8B;AAAA,MAMfC,eANe;;AAQrC,MAAMC,QAAQ,GAAG5B,WAAW,EAA5B;;AAEA,WAAS6B,SAAT,GAAoB;AAChBF,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAC,IAAAA,QAAQ,CAAC1B,SAAS,CAACe,IAAD,EAAOE,KAAP,CAAV,CAAR;AACH;;AAED,WAASW,SAAT,CAAmBC,EAAnB,EAAsB;AAClBH,IAAAA,QAAQ,CAACzB,WAAW,CAACc,IAAD,EAAQc,EAAR,EAAYZ,KAAZ,CAAZ,CAAR;AACH;;AAED5B,EAAAA,SAAS,CAAC,YAAM;AACZsC,IAAAA,SAAS;AACT,QAAMG,WAAW,GAAGjB,UAAU,CAACkB,WAAX,CAAuB,OAAvB,EAAgC,YAAM;AACtDJ,MAAAA,SAAS;AACZ,KAFmB,CAApB;AAIA,WAAOG,WAAP;AACH,GAPQ,EAON,CAACjB,UAAD,EAAcS,YAAd,CAPM,CAAT;AASAjC,EAAAA,SAAS,CAAC,YAAM;AACZoC,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH,GAFQ,EAEN,CAACJ,MAAD,CAFM,CAAT;;AAIA,WAASW,YAAT,GAAuB;AACnB,QAAIR,YAAJ,EAAiB;AACb,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAC5B,MAAM,CAACqC,OAAR,EAAiBrC,MAAM,CAACsC,UAAxB,EAAoC;AAAC9B,UAAAA,MAAM,EAAC;AAAR,SAApC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,KAAK,EAAED,MAAM,CAACgC,OAA9C;AAAuD,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;AACJ;;AAED,WAASC,YAAT,GAAwB;AACpB,QAAIhB,MAAM,IAAKA,MAAD,CAASiB,MAAT,IAAmB,CAAjC,EAAoC;AAChC,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAC1C,MAAM,CAAC2C,qBAAR,EAAgC3C,MAAM,CAAC4C,SAAvC,EAAkD;AAACpC,UAAAA,MAAM,EAACA,MAAM,GAAC;AAAf,SAAlD,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEqC,OAAO,gCAAtB;AAAwD,QAAA,UAAU,EAAE,SAApE;AACO,QAAA,KAAK,EAAE;AAACL,UAAAA,SAAS,EAAE,QAAZ;AAAsBM,UAAAA,KAAK,EAAE,GAA7B;AAAkCtC,UAAAA,MAAM,EAAE;AAA1C,SADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAMH;;AAED,WAAO,IAAP;AACH;;AAID,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK4B,YAAY,EADjB,EAEI,oBAAC,OAAD;AAAS,IAAA,qBAAqB,EAAE,CAACpC,MAAM,CAAC+C,WAAR,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAE9B,UAApB;AAAgC,IAAA,KAAK,EAAGhB,IAAI,CAAC+C,CAAL,CAAO,cAAP,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAChD,MAAM,CAAC+C,WAAR,EAAqB/C,MAAM,CAACiD,QAA5B,EAAsCjD,MAAM,CAAC4C,SAA7C,EAAyD5C,MAAM,CAACkD,oBAAhE,EAAuFlD,MAAM,CAACmD,kBAA9F,EAAmH;AAACC,MAAAA,QAAQ,EAAC;AAAV,KAAnH,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGQ3B,MAAM,IAAKA,MAAD,CAASiB,MAAT,GAAkB,CAA5B,GAEIjB,MAAM,CAAC4B,GAAP,CAAW,UAACC,KAAD,EAAQC,CAAR,EAAc;AACrB,WACI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMtC,UAAU,CAACuC,QAAX,CAAoB,MAApB,EAA4B;AAACC,UAAAA,MAAM,EAAE,MAAT;AAAmBC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAlB;AAA6BC,YAAAA,SAAS,EAACN,KAAK,CAACM;AAA7C;AAA3B,SAA5B,CAAN;AAAA,OAA3B;AAAoJ,MAAA,KAAK,EAAE,CAAC5D,MAAM,CAAC6D,iBAAR,EAA4B7D,MAAM,CAAC8D,kBAAnC,EAAwD;AAACC,QAAAA,iBAAiB,EAAC,CAAnB;AAAuBC,QAAAA,iBAAiB,EAAC;AAAzC,OAAxD,CAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAAChE,MAAM,CAACiE,YAAR,EAAuB;AAACC,QAAAA,IAAI,EAAC;AAAN,OAAvB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAErB,OAAO,2CAAtB;AAAmE,MAAA,KAAK,EAAE,CAAC7C,MAAM,CAACmE,MAAR,EAAiB;AAACC,QAAAA,WAAW,EAAC;AAAb,OAAjB,CAA1E;AAA6G,MAAA,UAAU,EAAC,SAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACpE,MAAM,CAACqE,WAAR,EAAsBrE,MAAM,CAACsE,YAA7B,EAA4CtE,MAAM,CAACuE,WAAnD,EAAiE;AAACC,QAAAA,UAAU,EAAC;AAAZ,OAAjE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiGlB,KAAK,CAACmB,IAAvG,CAFJ,CAFJ,EAOI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACzE,MAAM,CAACiE,YAAR,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMhD,UAAU,CAACuC,QAAX,CAAoB,aAApB,EAAmC;AAACvB,UAAAA,EAAE,EAAEqB,KAAK,CAACrB,EAAX;AAAe0B,UAAAA,QAAQ,EAAEL,KAAK,CAACK,QAA/B;AAA0CC,UAAAA,SAAS,EAACN,KAAK,CAACM,SAA1D;AAAqEa,UAAAA,IAAI,EAAEnB,KAAK,CAACmB,IAAjF;AAAuFC,UAAAA,OAAO,EAAEpB,KAAK,CAACoB,OAAtG;AAA+GC,UAAAA,IAAI,EAAE;AAArH,SAAnC,CAAN;AAAA,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE9B,OAAO,uCAAtB;AAA+D,MAAA,KAAK,EAAE,CAAC7C,MAAM,CAAC4E,MAAR,CAAtE;AAAuF,MAAA,UAAU,EAAC,SAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAM5C,SAAS,CAACsB,KAAK,CAACrB,EAAP,CAAf;AAAA,OAA3B;AAAsD,MAAA,KAAK,EAAE;AAAC4C,QAAAA,eAAe,EAAC,CAAjB;AAAqBC,QAAAA,eAAe,EAAC,MAArC;AAA8CC,QAAAA,WAAW,EAAC,EAA1D;AAA+DC,QAAAA,UAAU,EAAC;AAA1E,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEnC,OAAO,sCAAtB;AAA8D,MAAA,KAAK,EAAE,CAAC7C,MAAM,CAACiF,MAAR,CAArE;AAAsF,MAAA,UAAU,EAAC,SAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CAPJ,CADJ;AAmBH,GApBD,CAFJ,GAwBIxC,YAAY,EA3BxB,EA+BI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMxB,UAAU,CAACuC,QAAX,CAAoB,aAApB,EAAmC;AAAEmB,QAAAA,IAAI,EAAE;AAAR,OAAnC,CAAN;AAAA,KAA3B;AAAqF,IAAA,KAAK,EAAE,CAAC3E,MAAM,CAACkF,SAAR,EAAoBlF,MAAM,CAAC4C,SAA3B,EAAuC5C,MAAM,CAACmF,eAA9C,EAAgEnF,MAAM,CAACoF,YAAvE,CAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACpF,MAAM,CAACqE,WAAR,EAAsBrE,MAAM,CAACqF,UAA7B,EAA0CrF,MAAM,CAACuE,WAAjD,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8EtE,IAAI,CAAC+C,CAAL,CAAO,QAAP,CAA9E,CADJ,CA/BJ,CAJJ,CAFJ,CADJ;AA+CH;;AAED,eAAehC,WAAf","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport {\n    View,\n    Text,\n    Image,\n    TouchableOpacity,\n    Dimensions,\n    FlatList,\n    I18nManager,\n    ImageBackground,\n    ActivityIndicator\n} from \"react-native\";\nimport {Container, Content, Icon, Input} from 'native-base'\nimport styles from '../../assets/styles'\nimport i18n from \"../../locale/i18n\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getPlaces, deletePlace} from '../actions';\nimport Header from './Header';\nimport COLORS from \"../consts/colors\";\n\nconst height = Dimensions.get('window').height;\nconst isIOS = Platform.OS === 'ios';\nconst latitudeDelta = 0.922;\nconst longitudeDelta = 0.521;\n\nfunction NewLocation({navigation,route}) {\n\n    const lang = useSelector(state => state.lang.lang);\n    const token = useSelector(state => state.auth.user ? state.auth.user.data.token : null);\n    const places = useSelector(state => state.places.places);\n    const placesLoader = useSelector(state => state.places.loader);\n    const [screenLoader , setScreenLoader ] = useState(true);\n\n    const dispatch = useDispatch();\n\n    function fetchData(){\n        setScreenLoader(true)\n        dispatch(getPlaces(lang, token))\n    }\n\n    function deletePla(id){\n        dispatch(deletePlace(lang , id, token))\n    }\n\n    useEffect(() => {\n        fetchData();\n        const unsubscribe = navigation.addListener('focus', () => {\n            fetchData();\n        });\n\n        return unsubscribe;\n    }, [navigation , placesLoader]);\n\n    useEffect(() => {\n        setScreenLoader(false)\n    }, [places]);\n\n    function renderLoader(){\n        if (screenLoader){\n            return(\n                <View style={[styles.loading, styles.flexCenter, {height:'100%'}]}>\n                    <ActivityIndicator size=\"large\" color={COLORS.mstarda} style={{ alignSelf: 'center' }} />\n                </View>\n            );\n        }\n    }\n\n    function renderNoData() {\n        if (places && (places).length <= 0) {\n            return (\n                <View style={[styles.directionColumnCenter , styles.Width_100, {height:height-250}]}>\n                    <Image source={require('../../assets/images/note.png')} resizeMode={'contain'}\n                           style={{alignSelf: 'center', width: 200, height: 200}}/>\n                </View>\n            );\n        }\n\n        return null\n    }\n\n\n\n    return (\n        <Container >\n            {renderLoader()}\n            <Content contentContainerStyle={[styles.bgFullWidth]}>\n\n                <Header navigation={navigation} title={ i18n.t('selectNewLoc') } />\n\n                <View style={[styles.bgFullWidth ,styles.bg_White, styles.Width_100 , styles.paddingHorizontal_25 , styles.paddingVertical_20 , {overflow:'hidden'}]}>\n\n                    {\n                        places && (places).length > 0?\n\n                            places.map((place, i) => {\n                                return (\n                                    <TouchableOpacity onPress={() => navigation.navigate('tabs', {screen: 'home' ,  params: { latitude: place.latitude , longitude:place.longitude }})} style={[styles.directionRowSpace , styles.paddingVertical_15 , {borderBottomWidth:1 , borderBottomColor:'#ddd'}]}>\n\n                                        <View style={[styles.directionRow , {flex:1}]}>\n                                            <Image source={require('../../assets/images/circle_location.png')} style={[styles.icon12 , {marginRight:7}]} resizeMode='contain' />\n                                            <Text style={[styles.textRegular , styles.text_midGray , styles.textSize_15 , {lineHeight:22}]}>{place.name}</Text>\n                                        </View>\n\n                                        <View style={[styles.directionRow]}>\n                                            <TouchableOpacity onPress={() => navigation.navigate('setLocation', {id: place.id, latitude: place.latitude , longitude:place.longitude, name: place.name, address: place.address, edit: true })}>\n                                                <Image source={require('../../assets/images/edit_orange.png')} style={[styles.icon23]} resizeMode='contain' />\n                                            </TouchableOpacity>\n                                            <TouchableOpacity onPress={() => deletePla(place.id)} style={{borderLeftWidth:1 , borderLeftColor:'#ddd' , paddingLeft:15 , marginLeft:15}}>\n                                                <Image source={require('../../assets/images/delete_red.png')} style={[styles.icon20]} resizeMode='contain' />\n                                            </TouchableOpacity>\n                                        </View>\n\n                                    </TouchableOpacity>\n                                )\n                            })\n                            :\n                            renderNoData()\n                    }\n\n\n                    <TouchableOpacity onPress={() => navigation.navigate('setLocation', { edit: false})} style={[styles.mstrdaBtn , styles.Width_100 , styles.marginBottom_10 , styles.marginTop_55]}>\n                        <Text style={[styles.textRegular , styles.text_White , styles.textSize_15]}>{ i18n.t('newLoc') }</Text>\n                    </TouchableOpacity>\n\n                </View>\n\n            </Content>\n        </Container>\n    );\n}\n\nexport default NewLocation;\n\n\n"]},"metadata":{},"sourceType":"module"}