{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/ahmedtaha/Documents/work/react/amany/Archive/src/components/Login.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Container, Content, Form, Icon, Input, Item, Label, Toast } from 'native-base';\nimport styles from \"../../assets/styles\";\nimport i18n from \"../../locale/i18n\";\nimport COLORS from \"../consts/colors\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { userLogin } from \"../actions\";\nimport * as Permissions from 'expo-permissions';\nimport * as Notifications from 'expo-notifications';\nimport Constants from 'expo-constants';\nimport AuthHeader from \"../common/AuthHeader\";\nvar isIOS = Platform.OS === 'ios';\nNotifications.setNotificationHandler({\n  handleNotification: function handleNotification() {\n    return _regeneratorRuntime.async(function handleNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              shouldShowAlert: true,\n              shouldPlaySound: false,\n              shouldSetBadge: false\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\n\nfunction Login(_ref) {\n  var navigation = _ref.navigation;\n  var lang = useSelector(function (state) {\n    return state.lang.lang;\n  });\n  var auth = useSelector(function (state) {\n    return state.auth;\n  });\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      phone = _useState2[0],\n      setPhone = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      spinner = _useState6[0],\n      setSpinner = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showPass = _useState8[0],\n      setShowPass = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      expoPushToken = _useState10[0],\n      setExpoPushToken = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      notification = _useState12[0],\n      setNotification = _useState12[1];\n\n  var notificationListener = useRef();\n  var responseListener = useRef();\n  useEffect(function () {\n    setTimeout(function () {\n      return registerForPushNotificationsAsync().then(function (token) {\n        return setExpoPushToken(token);\n      });\n    }, 3000);\n    notificationListener.current = Notifications.addNotificationReceivedListener(function (notification) {\n      setNotification(notification);\n    });\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(function (response) {\n      console.log(response);\n    });\n    return function () {\n      Notifications.removeNotificationSubscription(notificationListener);\n      Notifications.removeNotificationSubscription(responseListener);\n    };\n  }, []);\n\n  function registerForPushNotificationsAsync() {\n    var token, _await$Permissions$ge, existingStatus, finalStatus, _await$Permissions$as, status;\n\n    return _regeneratorRuntime.async(function registerForPushNotificationsAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!Constants.isDevice) {\n              _context2.next = 22;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));\n\n          case 3:\n            _await$Permissions$ge = _context2.sent;\n            existingStatus = _await$Permissions$ge.status;\n            finalStatus = existingStatus;\n\n            if (!(existingStatus !== 'granted')) {\n              _context2.next = 12;\n              break;\n            }\n\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n          case 9:\n            _await$Permissions$as = _context2.sent;\n            status = _await$Permissions$as.status;\n            finalStatus = status;\n\n          case 12:\n            if (!(finalStatus !== 'granted')) {\n              _context2.next = 15;\n              break;\n            }\n\n            alert('Failed to get push token for push notification!');\n            return _context2.abrupt(\"return\");\n\n          case 15:\n            _context2.next = 17;\n            return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n          case 17:\n            token = _context2.sent.data;\n            AsyncStorage.setItem('deviceID', token);\n            console.log(token);\n            _context2.next = 23;\n            break;\n\n          case 22:\n            alert('Must use physical device for Push Notifications');\n\n          case 23:\n            if (Platform.OS === 'android') {\n              Notifications.setNotificationChannelAsync('default', {\n                name: 'default',\n                importance: Notifications.AndroidImportance.MAX,\n                vibrationPattern: [0, 250, 250, 250],\n                lightColor: '#FF231F7C'\n              });\n            }\n\n            return _context2.abrupt(\"return\", token);\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    setTimeout(function () {\n      return setSpinner(false);\n    }, 500);\n  }, [auth]);\n\n  function validate() {\n    var isError = false;\n    var msg = '';\n\n    if (phone.length <= 0) {\n      isError = true;\n      msg = i18n.t('namereq');\n    } else if (password.length < 6) {\n      isError = true;\n      msg = i18n.t('passreq');\n    }\n\n    if (msg !== '') {\n      Toast.show({\n        text: msg,\n        type: \"danger\",\n        duration: 3000,\n        textStyle: {\n          color: \"white\",\n          fontFamily: 'flatRegular',\n          textAlign: 'center'\n        }\n      });\n    }\n\n    return isError;\n  }\n\n  ;\n\n  function renderSubmit() {\n    if (password == '' || phone == '') {\n      return React.createElement(View, {\n        style: [styles.mstrdaBtn, styles.Width_100, styles.marginBottom_10, {\n          backgroundColor: '#ddd'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: [styles.textRegular, styles.text_gray, styles.textSize_15],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, i18n.t('login')));\n    }\n\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return onLoginPressed();\n      },\n      style: [styles.mstrdaBtn, styles.Width_100, styles.marginBottom_10],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: [styles.textRegular, styles.text_White, styles.textSize_15],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, i18n.t('login')));\n  }\n\n  function onLoginPressed() {\n    var err = validate();\n\n    if (!err) {\n      setSpinner(true);\n      dispatch(userLogin(phone, password, expoPushToken, lang, navigation));\n    }\n  }\n\n  function renderLoader() {\n    if (spinner) {\n      return React.createElement(View, {\n        style: [styles.loading, styles.flexCenter, {\n          height: '100%'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: COLORS.mstarda,\n        style: {\n          alignSelf: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, renderLoader(), React.createElement(ImageBackground, {\n    source: require(\"../../assets/images/splash_bg.png\"),\n    resizeMode: 'cover',\n    style: styles.imageBackground,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, React.createElement(Content, {\n    contentContainerStyle: [styles.bgFullWidth],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: [styles.bgFullWidth, styles.Width_100],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, React.createElement(AuthHeader, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: [styles.textBold, styles.text_mstarda, styles.textSize_18, styles.SelfCenter, styles.marginBottom_25],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, i18n.t('login')), React.createElement(View, {\n    style: [styles.directionRowSpace, styles.paddingHorizontal_25],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 24\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: [styles.Width_100],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 28\n    }\n  }, React.createElement(Form, {\n    style: [styles.Width_100, styles.flexCenter],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 32\n    }\n  }, React.createElement(Item, {\n    style: [styles.item],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 36\n    }\n  }, React.createElement(Label, {\n    style: [styles.label],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 40\n    }\n  }, i18n.t('phone')), React.createElement(Input, {\n    style: [styles.input],\n    onChangeText: function onChangeText(phone) {\n      return setPhone(phone);\n    },\n    keyboardType: 'number-pad',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 40\n    }\n  })), React.createElement(Item, {\n    style: [styles.item, styles.marginBottom_30],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 36\n    }\n  }, React.createElement(Label, {\n    style: [styles.label],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 40\n    }\n  }, i18n.t('password')), React.createElement(Input, {\n    style: [styles.input, {\n      paddingRight: 35\n    }],\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    secureTextEntry: !showPass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 40\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setShowPass(!showPass);\n    },\n    style: [{\n      position: 'absolute',\n      right: 10,\n      bottom: 13\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 40\n    }\n  }, React.createElement(Icon, {\n    type: 'FontAwesome',\n    name: showPass ? \"eye-slash\" : \"eye\",\n    style: [styles.textSize_18, styles.text_gray],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 44\n    }\n  }))), renderSubmit(), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('MainStack');\n    },\n    style: [styles.mstrdaBtn, styles.Width_100, styles.marginBottom_10, {\n      backgroundColor: '#ddd'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 36\n    }\n  }, React.createElement(Text, {\n    style: [styles.textRegular, styles.text_gray, styles.textSize_15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 40\n    }\n  }, i18n.t('visitor'))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('forgetPassword');\n    },\n    style: [styles.marginTop_10, styles.marginBottom_15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 36\n    }\n  }, React.createElement(Text, {\n    style: [styles.textRegular, styles.text_gray, styles.textSize_14],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 40\n    }\n  }, i18n.t('forgetPassword'))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('registerAs');\n    },\n    style: [styles.marginBottom_35, styles.directionRow],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 36\n    }\n  }, React.createElement(Text, {\n    style: [styles.textRegular, styles.text_gray, styles.textSize_14, {\n      marginRight: 5\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 40\n    }\n  }, i18n.t('haveNoAcc')), React.createElement(Text, {\n    style: [styles.textRegular, styles.text_mstarda, styles.textSize_14],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 40\n    }\n  }, i18n.t('clickHere'))))))))));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/ahmedtaha/Documents/work/react/amany/Archive/src/components/Login.js"],"names":["React","useState","useEffect","useRef","AsyncStorage","Container","Content","Form","Icon","Input","Item","Label","Toast","styles","i18n","COLORS","useSelector","useDispatch","userLogin","Permissions","Notifications","Constants","AuthHeader","isIOS","Platform","OS","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","Login","navigation","lang","state","auth","dispatch","phone","setPhone","password","setPassword","spinner","setSpinner","showPass","setShowPass","expoPushToken","setExpoPushToken","notification","setNotification","notificationListener","responseListener","setTimeout","registerForPushNotificationsAsync","then","token","current","addNotificationReceivedListener","addNotificationResponseReceivedListener","response","console","log","removeNotificationSubscription","isDevice","getAsync","NOTIFICATIONS","existingStatus","status","finalStatus","askAsync","alert","getExpoPushTokenAsync","data","setItem","setNotificationChannelAsync","name","importance","AndroidImportance","MAX","vibrationPattern","lightColor","validate","isError","msg","length","t","show","text","type","duration","textStyle","color","fontFamily","textAlign","renderSubmit","mstrdaBtn","Width_100","marginBottom_10","backgroundColor","textRegular","text_gray","textSize_15","onLoginPressed","text_White","err","renderLoader","loading","flexCenter","height","mstarda","alignSelf","require","imageBackground","bgFullWidth","textBold","text_mstarda","textSize_18","SelfCenter","marginBottom_25","directionRowSpace","paddingHorizontal_25","item","label","input","marginBottom_30","paddingRight","position","right","bottom","navigate","marginTop_10","marginBottom_15","textSize_14","marginBottom_35","directionRow","marginRight"],"mappings":"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","sourcesContent":["import React, { useState , useEffect , useRef } from \"react\";\nimport {\n    View,\n    Text,\n    Image,\n    TouchableOpacity,\n    KeyboardAvoidingView,\n    AsyncStorage,\n    ActivityIndicator,\n    Platform,\n    ImageBackground\n} from \"react-native\";\nimport {Container, Content, Form, Icon, Input, Item, Label, Toast} from 'native-base'\nimport styles from '../../assets/styles'\nimport i18n from \"../../locale/i18n\";\nimport COLORS from \"../consts/colors\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {userLogin} from '../actions';\nimport * as Permissions from 'expo-permissions';\nimport * as Notifications from 'expo-notifications';\nimport Constants from 'expo-constants';\nimport AuthHeader from '../common/AuthHeader'\n\n\nconst isIOS = Platform.OS === 'ios';\nNotifications.setNotificationHandler({\n    handleNotification: async () => ({\n        shouldShowAlert: true,\n        shouldPlaySound: false,\n        shouldSetBadge: false,\n    }),\n});\n\n\nfunction Login({navigation}) {\n\n    const lang = useSelector(state => state.lang.lang);\n    const auth = useSelector(state => state.auth);\n\n    const dispatch = useDispatch()\n\n    const [phone, setPhone] = useState('');\n    const [password, setPassword] = useState('');\n    const [spinner, setSpinner] = useState(false);\n    const [showPass, setShowPass] = useState(false);\n    const [expoPushToken, setExpoPushToken] = useState('');\n    const [notification, setNotification] = useState(false);\n    const notificationListener = useRef();\n    const responseListener = useRef();\n\n    useEffect(() => {\n        setTimeout(() => registerForPushNotificationsAsync().then(token => setExpoPushToken(token)) , 3000)\n\n\n        notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n            setNotification(notification);\n        });\n\n        responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\n            console.log(response);\n        });\n\n        return () => {\n            Notifications.removeNotificationSubscription(notificationListener);\n            Notifications.removeNotificationSubscription(responseListener);\n        };\n    }, []);\n\n    async function registerForPushNotificationsAsync() {\n        let token;\n        if (Constants.isDevice) {\n            const { status: existingStatus } = await Permissions.getAsync(Permissions.NOTIFICATIONS);\n            let finalStatus = existingStatus;\n            if (existingStatus !== 'granted') {\n                const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n                finalStatus = status;\n            }\n            if (finalStatus !== 'granted') {\n                alert('Failed to get push token for push notification!');\n                return;\n            }\n            token = (await Notifications.getExpoPushTokenAsync()).data;\n\n            AsyncStorage.setItem('deviceID', token)\n\n            console.log(token);\n        } else {\n            alert('Must use physical device for Push Notifications');\n        }\n\n        if (Platform.OS === 'android') {\n            Notifications.setNotificationChannelAsync('default', {\n                name: 'default',\n                importance: Notifications.AndroidImportance.MAX,\n                vibrationPattern: [0, 250, 250, 250],\n                lightColor: '#FF231F7C',\n            });\n        }\n\n        return token;\n    }\n\n    useEffect(() => {\n        setTimeout(() => setSpinner(false), 500);\n    }, [auth]);\n\n\n\n    function validate() {\n        let isError = false;\n        let msg = '';\n\n        if (phone.length <= 0) {\n            isError = true;\n            msg = i18n.t('namereq');\n        } else if (password.length < 6) {\n            isError = true;\n            msg = i18n.t('passreq');\n        }\n        if (msg !== '') {\n            Toast.show({\n                text: msg,\n                type: \"danger\",\n                duration: 3000,\n                textStyle: {\n                    color: \"white\",\n                    fontFamily: 'flatRegular',\n                    textAlign: 'center',\n                }\n            });\n        }\n        return isError;\n    };\n\n    function renderSubmit() {\n        if (password == '' || phone == '') {\n            return (\n                <View\n                    style={[styles.mstrdaBtn , styles.Width_100  , styles.marginBottom_10 , {\n                        backgroundColor:'#ddd'\n                    }]}\n                >\n                    <Text style={[styles.textRegular , styles.text_gray , styles.textSize_15]}>{ i18n.t('login') }</Text>\n                </View>\n            );\n        }\n\n        return (\n            <TouchableOpacity\n                onPress={() => onLoginPressed()} style={[styles.mstrdaBtn , styles.Width_100 , styles.marginBottom_10]}>\n                <Text style={[styles.textRegular , styles.text_White , styles.textSize_15]}>{ i18n.t('login') }</Text>\n            </TouchableOpacity>\n        );\n    }\n\n    function onLoginPressed() {\n        const err = validate();\n\n        if (!err){\n            setSpinner(true);\n            dispatch(userLogin(phone, password, expoPushToken , lang , navigation));\n        }\n    }\n\n    function renderLoader(){\n        if (spinner){\n            return(\n                <View style={[styles.loading, styles.flexCenter, {height:'100%'}]}>\n                    <ActivityIndicator size=\"large\" color={COLORS.mstarda} style={{ alignSelf: 'center' }} />\n                </View>\n            );\n        }\n    }\n\n    return (\n        <Container >\n            {renderLoader()}\n            <ImageBackground source={require('../../assets/images/splash_bg.png')} resizeMode={'cover'} style={styles.imageBackground}>\n                <Content contentContainerStyle={[styles.bgFullWidth]}>\n                    <View style={[styles.bgFullWidth, styles.Width_100]}>\n\n                        <AuthHeader navigation={navigation}/>\n\n                        <Text style={[styles.textBold , styles.text_mstarda , styles.textSize_18 ,styles.SelfCenter , styles.marginBottom_25]}>{ i18n.t('login') }</Text>\n\n                       <View style={[styles.directionRowSpace , styles.paddingHorizontal_25]}>\n\n                           <KeyboardAvoidingView style={[styles.Width_100]}>\n                               <Form style={[styles.Width_100 , styles.flexCenter]}>\n\n                                   <Item style={[styles.item]}>\n                                       <Label style={[styles.label]}>{ i18n.t('phone') }</Label>\n                                       <Input style={[styles.input]} onChangeText={(phone) => setPhone(phone)} keyboardType={'number-pad'} />\n\n                                   </Item>\n\n                                   <Item style={[styles.item , styles.marginBottom_30]}>\n                                       <Label style={[styles.label]}>{ i18n.t('password') }</Label>\n                                       <Input style={[styles.input , {paddingRight:35}]} onChangeText={(password) => setPassword(password)} secureTextEntry={!showPass} />\n                                       <TouchableOpacity onPress={() => setShowPass(!showPass)} style={[{position:'absolute' , right:10  , bottom:13}]}>\n                                           <Icon type={'FontAwesome'} name={showPass ? \"eye-slash\" : \"eye\"}\n                                                 style={[styles.textSize_18,styles.text_gray]} />\n                                       </TouchableOpacity>\n                                   </Item>\n\n                                   {renderSubmit()}\n\n                                   <TouchableOpacity onPress={() => navigation.navigate('MainStack')}\n                                       style={[styles.mstrdaBtn , styles.Width_100  , styles.marginBottom_10 , {\n                                           backgroundColor:'#ddd'\n                                       }]}\n                                   >\n                                       <Text style={[styles.textRegular , styles.text_gray , styles.textSize_15]}>{ i18n.t('visitor') }</Text>\n                                   </TouchableOpacity>\n\n                                   <TouchableOpacity onPress={() => navigation.navigate('forgetPassword')} style={[styles.marginTop_10 , styles.marginBottom_15]}>\n                                       <Text style={[styles.textRegular , styles.text_gray , styles.textSize_14]}>{ i18n.t('forgetPassword') }</Text>\n                                   </TouchableOpacity>\n\n                                   <TouchableOpacity onPress={() => navigation.navigate('registerAs')} style={[styles.marginBottom_35 , styles.directionRow]}>\n                                       <Text style={[styles.textRegular , styles.text_gray , styles.textSize_14 , {marginRight:5}]}>{ i18n.t('haveNoAcc') }</Text>\n                                       <Text style={[styles.textRegular , styles.text_mstarda , styles.textSize_14]}>{ i18n.t('clickHere') }</Text>\n                                   </TouchableOpacity>\n\n\n                               </Form>\n                           </KeyboardAvoidingView>\n                       </View>\n\n                   </View>\n                </Content>\n            </ImageBackground>\n        </Container>\n    );\n}\n\nexport default Login;\n\n\n"]},"metadata":{},"sourceType":"module"}