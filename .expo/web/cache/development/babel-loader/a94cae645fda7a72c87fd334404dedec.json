{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ahmedtaha/Documents/work/react/amany/Archive/src/components/ForgetPassword.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Container, Content, Form, Icon, Input, Item, Label, Toast } from 'native-base';\nimport styles from \"../../assets/styles\";\nimport i18n from \"../../locale/i18n\";\nimport COLORS from \"../consts/colors\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { checkPhone } from \"../actions\";\nimport AuthHeader from \"../common/AuthHeader\";\nvar isIOS = Platform.OS === 'ios';\n\nfunction ForgetPassword(_ref) {\n  var navigation = _ref.navigation;\n  var lang = useSelector(function (state) {\n    return state.lang.lang;\n  });\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      phone = _useState2[0],\n      setPhone = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      spinner = _useState4[0],\n      setSpinner = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  function renderSubmit() {\n    if (phone == '') {\n      return React.createElement(View, {\n        style: [styles.mstrdaBtn, styles.Width_100, styles.marginBottom_10, {\n          backgroundColor: '#ddd'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: [styles.textRegular, styles.text_gray, styles.textSize_15],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, i18n.t('confirm')));\n    }\n\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return passReco();\n      },\n      style: [styles.mstrdaBtn, styles.Width_100, styles.marginBottom_10],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: [styles.textRegular, styles.text_White, styles.textSize_15],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, i18n.t('confirm')));\n  }\n\n  function passReco() {\n    setSpinner(true);\n    dispatch(checkPhone(phone, lang, navigation)).then(function () {\n      return setSpinner(false);\n    });\n  }\n\n  function renderLoader() {\n    if (spinner) {\n      return React.createElement(View, {\n        style: [styles.loading, styles.flexCenter, {\n          height: '100%'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: COLORS.mstarda,\n        style: {\n          alignSelf: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, renderLoader(), React.createElement(ImageBackground, {\n    source: require(\"../../assets/images/splash_bg.png\"),\n    resizeMode: 'cover',\n    style: styles.imageBackground,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, React.createElement(Content, {\n    contentContainerStyle: [styles.bgFullWidth],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: [styles.bgFullWidth, styles.Width_100],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, React.createElement(AuthHeader, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: [styles.textBold, styles.text_mstarda, styles.textSize_18, styles.SelfCenter, styles.marginBottom_25],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, i18n.t('PassReco')), React.createElement(View, {\n    style: [styles.directionRowSpace, styles.paddingHorizontal_25],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: [styles.Width_100],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, React.createElement(Form, {\n    style: [styles.Width_100, styles.flexCenter],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, React.createElement(Item, {\n    style: [styles.item],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 37\n    }\n  }, React.createElement(Label, {\n    style: [styles.label],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 41\n    }\n  }, i18n.t('phone')), React.createElement(Input, {\n    style: [styles.input],\n    onChangeText: function onChangeText(phone) {\n      return setPhone(phone);\n    },\n    keyboardType: 'number-pad',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 41\n    }\n  })), renderSubmit())))))));\n}\n\nexport default ForgetPassword;","map":{"version":3,"sources":["/Users/ahmedtaha/Documents/work/react/amany/Archive/src/components/ForgetPassword.js"],"names":["React","useState","useEffect","AsyncStorage","Container","Content","Form","Icon","Input","Item","Label","Toast","styles","i18n","COLORS","useSelector","useDispatch","checkPhone","AuthHeader","isIOS","Platform","OS","ForgetPassword","navigation","lang","state","phone","setPhone","spinner","setSpinner","dispatch","renderSubmit","mstrdaBtn","Width_100","marginBottom_10","backgroundColor","textRegular","text_gray","textSize_15","t","passReco","text_White","then","renderLoader","loading","flexCenter","height","mstarda","alignSelf","require","imageBackground","bgFullWidth","textBold","text_mstarda","textSize_18","SelfCenter","marginBottom_25","directionRowSpace","paddingHorizontal_25","item","label","input"],"mappings":"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","sourcesContent":["import React, { useState , useEffect } from \"react\";\nimport {\n    View,\n    Text,\n    Image,\n    TouchableOpacity,\n    KeyboardAvoidingView,\n    AsyncStorage,\n    ActivityIndicator,\n    Platform,\n    ImageBackground\n} from \"react-native\";\nimport {Container, Content, Form, Icon, Input, Item, Label, Toast} from 'native-base'\nimport styles from '../../assets/styles'\nimport i18n from \"../../locale/i18n\";\nimport COLORS from \"../consts/colors\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {checkPhone} from '../actions';\nimport AuthHeader from \"../common/AuthHeader\";\n\n\nconst isIOS = Platform.OS === 'ios';\n\nfunction ForgetPassword({navigation}) {\n\n    const lang = useSelector(state => state.lang.lang);\n    // const auth = useSelector(state => state.auth);\n\n    const [phone, setPhone] = useState('');\n    const [spinner, setSpinner] = useState(false);\n    const dispatch = useDispatch()\n\n    function renderSubmit() {\n        if (phone == '') {\n            return (\n                <View\n                    style={[styles.mstrdaBtn , styles.Width_100  , styles.marginBottom_10 , {\n                        backgroundColor:'#ddd'\n                    }]}\n                >\n                    <Text style={[styles.textRegular , styles.text_gray , styles.textSize_15]}>{ i18n.t('confirm') }</Text>\n                </View>\n            );\n        }\n\n        return (\n            <TouchableOpacity\n                onPress={() => passReco()} style={[styles.mstrdaBtn , styles.Width_100 , styles.marginBottom_10]}>\n                <Text style={[styles.textRegular , styles.text_White , styles.textSize_15]}>{ i18n.t('confirm') }</Text>\n            </TouchableOpacity>\n        );\n    }\n\n    function passReco() {\n        setSpinner(true);\n        dispatch(checkPhone(phone, lang, navigation)).then(() => setSpinner(false));\n    }\n\n    function renderLoader(){\n        if (spinner){\n            return(\n                <View style={[styles.loading, styles.flexCenter, {height:'100%'}]}>\n                    <ActivityIndicator size=\"large\" color={COLORS.mstarda} style={{ alignSelf: 'center' }} />\n                </View>\n            );\n        }\n    }\n\n    return (\n        <Container >\n            {renderLoader()}\n            <ImageBackground source={require('../../assets/images/splash_bg.png')} resizeMode={'cover'} style={styles.imageBackground}>\n                <Content contentContainerStyle={[styles.bgFullWidth]}>\n                    <View style={[styles.bgFullWidth, styles.Width_100]}>\n\n                        <AuthHeader navigation={navigation}/>\n\n                        <Text style={[styles.textBold , styles.text_mstarda , styles.textSize_18 ,styles.SelfCenter , styles.marginBottom_25]}>{ i18n.t('PassReco') }</Text>\n\n                        <View style={[styles.directionRowSpace , styles.paddingHorizontal_25]}>\n                            <KeyboardAvoidingView style={[styles.Width_100]}>\n                                <Form style={[styles.Width_100 , styles.flexCenter]}>\n\n                                    <Item style={[styles.item]}>\n                                        <Label style={[styles.label]}>{ i18n.t('phone') }</Label>\n                                        <Input style={[styles.input]}\n                                               onChangeText={(phone) => setPhone(phone)}\n                                               keyboardType={'number-pad'}\n                                        />\n\n                                    </Item>\n\n                                    {renderSubmit()}\n\n                                </Form>\n                            </KeyboardAvoidingView>\n                        </View>\n\n                    </View>\n                </Content>\n            </ImageBackground>\n        </Container>\n    );\n}\n\nexport default ForgetPassword;\n\n\n"]},"metadata":{},"sourceType":"module"}